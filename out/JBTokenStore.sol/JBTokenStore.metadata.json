{
  "compiler": {
    "version": "0.8.16+commit.07a7930e"
  },
  "language": "Solidity",
  "output": {
    "abi": [
      {
        "inputs": [
          {
            "internalType": "contract IJBOperatorStore",
            "name": "_operatorStore",
            "type": "address"
          },
          {
            "internalType": "contract IJBProjects",
            "name": "_projects",
            "type": "address"
          },
          {
            "internalType": "contract IJBDirectory",
            "name": "_directory",
            "type": "address"
          },
          {
            "internalType": "contract IJBFundingCycleStore",
            "name": "_fundingCycleStore",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "constructor"
      },
      {
        "inputs": [],
        "name": "ALREADY_SET",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "CONTROLLER_UNAUTHORIZED",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "EMPTY_NAME",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "EMPTY_SYMBOL",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "EMPTY_TOKEN",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "INSUFFICIENT_FUNDS",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "INSUFFICIENT_UNCLAIMED_TOKENS",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "OVERFLOW_ALERT",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "PROJECT_ALREADY_HAS_TOKEN",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "RECIPIENT_ZERO_ADDRESS",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "TOKENS_MUST_HAVE_18_DECIMALS",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "TOKEN_NOT_FOUND",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "TRANSFERS_PAUSED",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "UNAUTHORIZED",
        "type": "error"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "holder",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "uint256",
            "name": "projectId",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "initialUnclaimedBalance",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "initialClaimedBalance",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "bool",
            "name": "preferClaimedTokens",
            "type": "bool"
          },
          {
            "indexed": false,
            "internalType": "address",
            "name": "caller",
            "type": "address"
          }
        ],
        "name": "Burn",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "holder",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "uint256",
            "name": "projectId",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "initialUnclaimedBalance",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "address",
            "name": "caller",
            "type": "address"
          }
        ],
        "name": "Claim",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "uint256",
            "name": "projectId",
            "type": "uint256"
          },
          {
            "indexed": true,
            "internalType": "contract IJBToken",
            "name": "token",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "string",
            "name": "name",
            "type": "string"
          },
          {
            "indexed": false,
            "internalType": "string",
            "name": "symbol",
            "type": "string"
          },
          {
            "indexed": false,
            "internalType": "address",
            "name": "caller",
            "type": "address"
          }
        ],
        "name": "Issue",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "holder",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "uint256",
            "name": "projectId",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "bool",
            "name": "tokensWereClaimed",
            "type": "bool"
          },
          {
            "indexed": false,
            "internalType": "bool",
            "name": "preferClaimedTokens",
            "type": "bool"
          },
          {
            "indexed": false,
            "internalType": "address",
            "name": "caller",
            "type": "address"
          }
        ],
        "name": "Mint",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "uint256",
            "name": "projectId",
            "type": "uint256"
          },
          {
            "indexed": true,
            "internalType": "contract IJBToken",
            "name": "newToken",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "address",
            "name": "caller",
            "type": "address"
          }
        ],
        "name": "Set",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "holder",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "uint256",
            "name": "projectId",
            "type": "uint256"
          },
          {
            "indexed": true,
            "internalType": "address",
            "name": "recipient",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "address",
            "name": "caller",
            "type": "address"
          }
        ],
        "name": "Transfer",
        "type": "event"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_holder",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "_projectId",
            "type": "uint256"
          }
        ],
        "name": "balanceOf",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "balance",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_holder",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "_projectId",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "_amount",
            "type": "uint256"
          },
          {
            "internalType": "bool",
            "name": "_preferClaimedTokens",
            "type": "bool"
          }
        ],
        "name": "burnFrom",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_holder",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "_projectId",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "_amount",
            "type": "uint256"
          }
        ],
        "name": "claimFor",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "directory",
        "outputs": [
          {
            "internalType": "contract IJBDirectory",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "fundingCycleStore",
        "outputs": [
          {
            "internalType": "contract IJBFundingCycleStore",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "_projectId",
            "type": "uint256"
          },
          {
            "internalType": "string",
            "name": "_name",
            "type": "string"
          },
          {
            "internalType": "string",
            "name": "_symbol",
            "type": "string"
          }
        ],
        "name": "issueFor",
        "outputs": [
          {
            "internalType": "contract IJBToken",
            "name": "token",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_holder",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "_projectId",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "_amount",
            "type": "uint256"
          },
          {
            "internalType": "bool",
            "name": "_preferClaimedTokens",
            "type": "bool"
          }
        ],
        "name": "mintFor",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "operatorStore",
        "outputs": [
          {
            "internalType": "contract IJBOperatorStore",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "projects",
        "outputs": [
          {
            "internalType": "contract IJBProjects",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "_projectId",
            "type": "uint256"
          },
          {
            "internalType": "contract IJBToken",
            "name": "_token",
            "type": "address"
          }
        ],
        "name": "setFor",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "name": "tokenOf",
        "outputs": [
          {
            "internalType": "contract IJBToken",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "_projectId",
            "type": "uint256"
          }
        ],
        "name": "totalSupplyOf",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "totalSupply",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_holder",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "_projectId",
            "type": "uint256"
          },
          {
            "internalType": "address",
            "name": "_recipient",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "_amount",
            "type": "uint256"
          }
        ],
        "name": "transferFrom",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "name": "unclaimedBalanceOf",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "name": "unclaimedTotalSupplyOf",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      }
    ],
    "devdoc": {
      "details": "Token balances can be either represented internally or claimed as ERC-20s into wallets. This contract manages these two representations and allows claiming.The total supply of a project's tokens and the balance of each account are calculated in this contract.Each project can bring their own token if they prefer, and swap between tokens at any time.Adheres to - IJBTokenStore: General interface for the methods in this contract that interact with the blockchain's state according to the protocol's rules.Inherits from - JBControllerUtility: Includes convenience functionality for checking if the message sender is the current controller of the project whose data is being manipulated. JBOperatable: Includes convenience functionality for checking a message sender's permissions before executing certain transactions.",
      "kind": "dev",
      "methods": {
        "balanceOf(address,uint256)": {
          "params": {
            "_holder": "The token holder to get a balance for.",
            "_projectId": "The project to get the `_holder`s balance of."
          },
          "returns": {
            "balance": "The project token balance of the `_holder"
          }
        },
        "burnFrom(address,uint256,uint256,bool)": {
          "details": "Only a project's current controller can burn its tokens.",
          "params": {
            "_amount": "The amount of tokens to burn.",
            "_holder": "The address that owns the tokens being burned.",
            "_preferClaimedTokens": "A flag indicating whether there's a preference for tokens to burned from the `_holder`s wallet if the project currently has a token contract attached.",
            "_projectId": "The ID of the project to which the burned tokens belong."
          }
        },
        "claimFor(address,uint256,uint256)": {
          "details": "Only a token holder or an operator specified by the token holder can claim its unclaimed tokens.",
          "params": {
            "_amount": "The amount of tokens to claim.",
            "_holder": "The owner of the tokens being claimed.",
            "_projectId": "The ID of the project whose tokens are being claimed."
          }
        },
        "constructor": {
          "params": {
            "_directory": "A contract storing directories of terminals and controllers for each project.",
            "_fundingCycleStore": "A contract storing all funding cycle configurations.",
            "_operatorStore": "A contract storing operator assignments.",
            "_projects": "A contract which mints ERC-721's that represent project ownership and transfers."
          }
        },
        "issueFor(uint256,string,string)": {
          "details": "Deploys a project's ERC-20 token contract.Only a project's owner or operator can issue its token.",
          "params": {
            "_name": "The ERC-20's name.",
            "_projectId": "The ID of the project being issued tokens.",
            "_symbol": "The ERC-20's symbol."
          },
          "returns": {
            "token": "The token that was issued."
          }
        },
        "mintFor(address,uint256,uint256,bool)": {
          "details": "Only a project's current controller can mint its tokens.",
          "params": {
            "_amount": "The amount of tokens to mint.",
            "_holder": "The address receiving the new tokens.",
            "_preferClaimedTokens": "A flag indicating whether there's a preference for minted tokens to be claimed automatically into the `_holder`s wallet if the project currently has a token contract attached.",
            "_projectId": "The ID of the project to which the tokens belong."
          }
        },
        "setFor(uint256,address)": {
          "details": "Only a project's owner or operator can set its token.",
          "params": {
            "_projectId": "The ID of the project to which the set token belongs.",
            "_token": "The new token. "
          }
        },
        "totalSupplyOf(uint256)": {
          "params": {
            "_projectId": "The ID of the project to get the total token supply of."
          },
          "returns": {
            "totalSupply": "The total supply of the project's tokens."
          }
        },
        "transferFrom(address,uint256,address,uint256)": {
          "details": "Only a token holder or an operator can transfer its unclaimed tokens.",
          "params": {
            "_amount": "The amount of tokens to transfer.",
            "_holder": "The address to transfer tokens from.",
            "_projectId": "The ID of the project whose tokens are being transferred.",
            "_recipient": "The recipient of the tokens."
          }
        }
      },
      "version": 1
    },
    "userdoc": {
      "kind": "user",
      "methods": {
        "balanceOf(address,uint256)": {
          "notice": "The total balance of tokens a holder has for a specified project, including claimed and unclaimed tokens."
        },
        "burnFrom(address,uint256,uint256,bool)": {
          "notice": "Burns a project's tokens."
        },
        "claimFor(address,uint256,uint256)": {
          "notice": "Claims internally accounted for tokens into a holder's wallet."
        },
        "directory()": {
          "notice": " The directory of terminals and controllers for projects."
        },
        "fundingCycleStore()": {
          "notice": "The contract storing all funding cycle configurations."
        },
        "issueFor(uint256,string,string)": {
          "notice": "Issues a project's ERC-20 tokens that'll be used when claiming tokens."
        },
        "mintFor(address,uint256,uint256,bool)": {
          "notice": "Mint new project tokens."
        },
        "operatorStore()": {
          "notice": " A contract storing operator assignments."
        },
        "projects()": {
          "notice": "Mints ERC-721's that represent project ownership and transfers."
        },
        "setFor(uint256,address)": {
          "notice": "Set a project's token if not already set."
        },
        "tokenOf(uint256)": {
          "notice": "Each project's attached token contract. _projectId The ID of the project to which the token belongs."
        },
        "totalSupplyOf(uint256)": {
          "notice": "The total supply of tokens for each project, including claimed and unclaimed tokens."
        },
        "transferFrom(address,uint256,address,uint256)": {
          "notice": "Allows a holder to transfer unclaimed tokens to another account."
        },
        "unclaimedBalanceOf(address,uint256)": {
          "notice": "Each holder's balance of unclaimed tokens for each project. _holder The holder of balance. _projectId The ID of the project to which the token belongs."
        },
        "unclaimedTotalSupplyOf(uint256)": {
          "notice": "The total supply of unclaimed tokens for each project. _projectId The ID of the project to which the token belongs."
        }
      },
      "notice": "Manage token minting, burning, and account balances.",
      "version": 1
    }
  },
  "settings": {
    "compilationTarget": {
      "node_modules/@jbx-protocol/juice-contracts-v3/contracts/JBTokenStore.sol": "JBTokenStore"
    },
    "evmVersion": "london",
    "libraries": {},
    "metadata": {
      "bytecodeHash": "ipfs"
    },
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "remappings": [
      ":@jbx-protocol/=node_modules/@jbx-protocol/",
      ":@openzeppelin/=node_modules/@openzeppelin/",
      ":@paulrberg/=node_modules/@paulrberg/",
      ":ds-test/=lib/forge-std/lib/ds-test/src/",
      ":forge-std/=lib/forge-std/src/",
      ":prb-math/=node_modules/prb-math/"
    ]
  },
  "sources": {
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/JBToken.sol": {
      "keccak256": "0x71717bf1ece43cc2337b65f4715222b7ea2950d6e856bc3084073800cb17fc62",
      "license": "MIT",
      "urls": [
        "bzz-raw://97aaf2b3536ff3f9c792cd36c583f4a53e2312b0c62704e2ab6e5e3598fc7a24",
        "dweb:/ipfs/QmdPUdX8pUXneobWtC8oD2Xdzw7r8Zrzw41jVSzozLrDzM"
      ]
    },
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/JBTokenStore.sol": {
      "keccak256": "0xe56b85fbf1a077ff290839f92823c9249879b8adbf6d50e45a95e53090fdb774",
      "license": "MIT",
      "urls": [
        "bzz-raw://87cafd1365d5f2d1e118a8c330e777d9078d40c1e783f4cd486ac72458b668c8",
        "dweb:/ipfs/QmZnKr8R5XNB4Ku1g6fFfAnXFqvWBVficu6Lp7htMnyjag"
      ]
    },
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/abstract/JBControllerUtility.sol": {
      "keccak256": "0x23701e4f46df7f37506c3748ff708231b06f39f8fd6f0f4c440832d530fc364f",
      "license": "MIT",
      "urls": [
        "bzz-raw://cecf453a9a1c9e74ea55ac3309e381197bd7b310a7af0d954d36e9afd4abbc6d",
        "dweb:/ipfs/QmQf62M1Fr3evXGURiLkBRfeKsLXTzB6NnbBn1TWRQ92JW"
      ]
    },
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/abstract/JBOperatable.sol": {
      "keccak256": "0x9e62cac5c464eb973f881cf6c373b95aab31d2ddbeb048ee7ad82b5c9ab28add",
      "license": "MIT",
      "urls": [
        "bzz-raw://3b76b81bf5076219f1babbebcf993ecb1fc04ee547e3c82a8c74bfa761c8a735",
        "dweb:/ipfs/QmbpQintWGTJvQyqoe4fdWFF22mBxb2hSomwbbuJ73CQpi"
      ]
    },
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/enums/JBBallotState.sol": {
      "keccak256": "0x891fcac63470398b3a11239da7feba6b07d640809fcefd2404303b823d7378f8",
      "license": "MIT",
      "urls": [
        "bzz-raw://6e6adfceaf284b669a8c1cbcf2da7f18ab31a2d1066f9db8bc914349e7401de7",
        "dweb:/ipfs/QmXLHVRPPZdXUkgAHQbHUtEzAvCJk1P6rJ7wrwfTcfW6fw"
      ]
    },
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/interfaces/IJBControllerUtility.sol": {
      "keccak256": "0xd875bbeb2412c59b01d9e78884edb4becdcb6f2f3889deef1814921e46497c49",
      "license": "MIT",
      "urls": [
        "bzz-raw://2be505bb6fadf16f483d7a6952873d5d2922c71e9a8a4a02be17a934c0e32ab7",
        "dweb:/ipfs/QmQKevq1EXfXiMvi8TxMYCxFyBsVRfBfNBChfPFKf9XR55"
      ]
    },
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/interfaces/IJBDirectory.sol": {
      "keccak256": "0x715321646db00514d1355ed43c40cd3f01e94959552fd07797b315d9c49cdb1d",
      "license": "MIT",
      "urls": [
        "bzz-raw://c34c9e1c727ffc63dd42fb6e6ffb3116c8ba15d6a322a300f10f29478974768d",
        "dweb:/ipfs/QmYToaGrbMyyWAuyepYcDd8M6KcmosY8AWhT3uJmPM6Pvy"
      ]
    },
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/interfaces/IJBFundingCycleBallot.sol": {
      "keccak256": "0x49553a56209237846bc400cf27f260824a6bd06fd8094a7eb5abb9de75779598",
      "license": "MIT",
      "urls": [
        "bzz-raw://559372746f94f28b385bc336df263f583dca5377350645c0b28110b083bdb41a",
        "dweb:/ipfs/QmeQRYqPjXBQCtMKXSFtHVD2ewEPoUAPDxLh4oWTRSKbmx"
      ]
    },
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/interfaces/IJBFundingCycleStore.sol": {
      "keccak256": "0xaead823851433be0c2ddc8f8086813e6cd647de3a1bc0f7570a5d6b38c378b5a",
      "license": "MIT",
      "urls": [
        "bzz-raw://7f11fd52ba9ef67b40811d8a2298ae8b69447d2565b3f1069cbb8f0f13bc65e7",
        "dweb:/ipfs/QmVbBzpTxZWar9xvj6x1vW91hJDv2iPVq7aG6waMxaHUPQ"
      ]
    },
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/interfaces/IJBOperatable.sol": {
      "keccak256": "0x09a55a91c6ce3625379334271d236cfa47bf36522a91568b406bf06f7239407e",
      "license": "MIT",
      "urls": [
        "bzz-raw://c4e0058ff862925a9070f88bec5c53e8aaa5d3ac75952285b1e7ca67ecbe1d3b",
        "dweb:/ipfs/QmVowtkRjGePcpaGjivvFyWTjQBGCtJQqoXFtxX6qhkx56"
      ]
    },
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/interfaces/IJBOperatorStore.sol": {
      "keccak256": "0x17f4929812a356984795fafed8cb2be816a025c9a0771d85595ac0b5ff3cffc5",
      "license": "MIT",
      "urls": [
        "bzz-raw://4379909df832d51d25ac6f863c12e5271c96f01c4fd399eaeb16be3db8786e4c",
        "dweb:/ipfs/QmTeGMNaf3KPT2A54sQ6HoZiBwfGRNqMZtvvci4oAN4z2s"
      ]
    },
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/interfaces/IJBPaymentTerminal.sol": {
      "keccak256": "0xb7826f5ed609359ce322c09e83236c47ba385df1c3cad3607e56fd0a2e00eee2",
      "license": "MIT",
      "urls": [
        "bzz-raw://cbb0de0e73f73a04fcfc8f08cab3588b6d608cf5268af737cff6a530f6062c95",
        "dweb:/ipfs/QmPGb8aEbZNHNnrCvuGH52RLvV3kjL3agxQiFrjHoLHaup"
      ]
    },
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/interfaces/IJBProjects.sol": {
      "keccak256": "0x7cfc021d0bd7e73b1ba8f4845d7d35e3419d6a14d3d25ca3a8010e7f91062fe4",
      "license": "MIT",
      "urls": [
        "bzz-raw://ff265e13e60da56b93104260ed69ab01153437ec2af9d453781f22ca295eaef9",
        "dweb:/ipfs/QmfGCSLX2Wy26ojf4U12udsdtjSSacbLcZGwCjTw7MjWF8"
      ]
    },
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/interfaces/IJBToken.sol": {
      "keccak256": "0xe8969210417736c85d71101bf1c0bd8ebbf9d1e62a93e758148bd5709a6c7097",
      "license": "MIT",
      "urls": [
        "bzz-raw://214c67c2ebeabd1b412ac9b0b6de4c02765c8311a3dc258568a2aa7322d58fb7",
        "dweb:/ipfs/QmeEbk8YWRVtMpxWQGfYbMrgYc2qsPhQF5jpufK26RrCXY"
      ]
    },
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/interfaces/IJBTokenStore.sol": {
      "keccak256": "0x98459e3af050d41dfeffdc97f1c93330207ba450f8ff3613224b49a89eeca9c6",
      "license": "MIT",
      "urls": [
        "bzz-raw://0e98bda797088b1bb2a756eaed911ab12b092ffdad5467e82650bfa9bf8dd046",
        "dweb:/ipfs/QmbuKq4xSC8LL62smwrHWCWKiWawEu8Ne2n7q8DhKHKvtD"
      ]
    },
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/interfaces/IJBTokenUriResolver.sol": {
      "keccak256": "0xd267fd8ca7c21c2c71794acdb9a98314c33a35fc559e0bf0897a6686d196d174",
      "license": "MIT",
      "urls": [
        "bzz-raw://aa7053d4300ed1374f3f993e6e2163d0a05ee780e4e99eb007b55eabc93c724e",
        "dweb:/ipfs/QmYZAUn7VCwqpDWYZNCXLNYMRQpD334YgPRiGCfxQApzuT"
      ]
    },
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/libraries/JBConstants.sol": {
      "keccak256": "0x34362846a1cd428a8bdedf4ab6857e11402f345cb87b994b2e7fb6d2474b808d",
      "license": "MIT",
      "urls": [
        "bzz-raw://80b423d29251e6d6cc6bd24b89474628ebcd588fbf485da714134e449e002264",
        "dweb:/ipfs/QmVBKR4eLMfJRHJLxEJJJQiYEgkoXK6kK6HyFy7mQ9Wx6d"
      ]
    },
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/libraries/JBFundingCycleMetadataResolver.sol": {
      "keccak256": "0x3d045c38593102cfb6ac67f3ddf2232e1ff5518d6d021423ae2681387599fbd3",
      "license": "MIT",
      "urls": [
        "bzz-raw://a3ed08bbad9868881b87258ecb34b6b5a4fe83e321e5f59c66a758180077135e",
        "dweb:/ipfs/QmbVDpmk4VvunFqpkmsEqX8VomEbsXpRebv841dHRBpy63"
      ]
    },
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/libraries/JBGlobalFundingCycleMetadataResolver.sol": {
      "keccak256": "0x0d998f938026edeb755987a79421267cf860801161b5f171206a200b60f1061f",
      "license": "MIT",
      "urls": [
        "bzz-raw://d2ff895bbf2f18fe6538abe53966acd8ea128795283209bb8402ac72ddd529b1",
        "dweb:/ipfs/QmZgU8rokY5sBQ2guFmPotGh4e8ReNHAyZzRhZXrN9a8EP"
      ]
    },
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/libraries/JBOperations.sol": {
      "keccak256": "0x7f8e501e6890297f4015b1c27cebdb44fadbf21204bea1f3162f5388c060f690",
      "license": "MIT",
      "urls": [
        "bzz-raw://6827d04b543d9579e910703ffe4b97293cad258faab20c52dfb17b905a4b5e9a",
        "dweb:/ipfs/QmUW4NQdubMEd71uAdo7VkDXgTdvmiV9CAMSjk9ozQBfz9"
      ]
    },
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/structs/JBFundingCycle.sol": {
      "keccak256": "0xcdd3ac9b6fa67e62ada88d09b73bc35ade1cd77d43db712289266a788928b4c2",
      "license": "MIT",
      "urls": [
        "bzz-raw://8ba0be407022bbeb0e9272884653209ee262b8a4e00ffbba1298c3b119feccba",
        "dweb:/ipfs/QmbtLQzSN3hut4jYVsYPiYDfRkDdGkZmTWBnV2wJKrdM3K"
      ]
    },
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/structs/JBFundingCycleData.sol": {
      "keccak256": "0x2aa6368bf4dfc5797e8b02a978293de0c777fae2658de2c825a103587240f3b0",
      "license": "MIT",
      "urls": [
        "bzz-raw://2d7a980ab9b67ad1569d4407b747903cab668a332214117f5ad44feb50af0a3a",
        "dweb:/ipfs/QmSuEzmrmDSihrTKYCk8miq7VQi7WD6jmQePkjDyzt7UpC"
      ]
    },
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/structs/JBFundingCycleMetadata.sol": {
      "keccak256": "0x783604440cac8d176332eab28166f188ee5c230378c08cfc95fea4f7187dc77d",
      "license": "MIT",
      "urls": [
        "bzz-raw://81409f9675aabd5ece88efbf08d1acb5581c2aac5b6394824f575f5f2edb5788",
        "dweb:/ipfs/QmPWdUztAEssCEnuFFkj74kNFEfVUxbNFmD5GmVB2Qvj1h"
      ]
    },
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/structs/JBGlobalFundingCycleMetadata.sol": {
      "keccak256": "0x05d85530305fec6d6eca54cdbc2cd9110cbda0146598032b0203aa4b622944ff",
      "license": "MIT",
      "urls": [
        "bzz-raw://ec56eff6784c7b60ebc3098037573d8ece138794a9a58ebe8412e75927e984cd",
        "dweb:/ipfs/QmdkEeE6JDyCiV3YBKf7h3FymEHCAHHAtBokUkJwFWVPSf"
      ]
    },
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/structs/JBOperatorData.sol": {
      "keccak256": "0x3b85be7b69515976ee10770776283911666aceca820b0cf4e201ea4dbffeb6f0",
      "license": "MIT",
      "urls": [
        "bzz-raw://1a18afb385759e5440c645f2a5c581e42a7ac357c73c376fb34dbb5d5fd8f9af",
        "dweb:/ipfs/QmZziN5ixwUXpk185YrcneBEVq91gVqYoBD7MrbvTTpALP"
      ]
    },
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/structs/JBProjectMetadata.sol": {
      "keccak256": "0x90ad7b1014c0a9f945fe7a2efde9d5de41e40574fa27969070b1d2ff52033ea0",
      "license": "MIT",
      "urls": [
        "bzz-raw://1fafc65a9fd74605b7d6c6f0a92b3237a8e3efdd160affb8c117bad00dcf9494",
        "dweb:/ipfs/QmQkcVt11WLqrxHVrcDCF6dNxzg2kKHEghAgSbfLF6CHkt"
      ]
    },
    "node_modules/@openzeppelin/contracts/access/Ownable.sol": {
      "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
      "license": "MIT",
      "urls": [
        "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
        "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
      ]
    },
    "node_modules/@openzeppelin/contracts/governance/utils/IVotes.sol": {
      "keccak256": "0xf5324a55ee9c0b4a840ea57c055ac9d046f88986ceef567e1cf68113e46a79c0",
      "license": "MIT",
      "urls": [
        "bzz-raw://f41fe2bddc33c17ccccfc25379b1869354e9ee62d8b28d2acc95229eeba37a86",
        "dweb:/ipfs/Qmb6SF2XL2uSvH6k5JSjtx4Xoqz41ACkhdAhtbW1Yh3RiY"
      ]
    },
    "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
      "keccak256": "0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238",
      "license": "MIT",
      "urls": [
        "bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0",
        "dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy"
      ]
    },
    "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
      "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
      "license": "MIT",
      "urls": [
        "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
        "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
      ]
    },
    "node_modules/@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol": {
      "keccak256": "0x7fd2492be0468be4662081ee25cde38a31e4a0ceca0fed10160462389013910f",
      "license": "MIT",
      "urls": [
        "bzz-raw://10c660ba772feee0fcb29319b15b328b429cd020079786e8d00992159f4b7b4e",
        "dweb:/ipfs/QmTjnb1FLbjHkgSZ7qcRZnNSwmZnobBpkJ9UWSc1SkVqhU"
      ]
    },
    "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
      "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
      "license": "MIT",
      "urls": [
        "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
        "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
      ]
    },
    "node_modules/@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol": {
      "keccak256": "0x07536242e24ee7067295d32c08e495a33e605f3c52f8ee4ec3bdcb7a351313d2",
      "license": "MIT",
      "urls": [
        "bzz-raw://01f99dbf2ce567a64a03fc4d38b76d64d52bf1a2302922971446b1cf777220ec",
        "dweb:/ipfs/QmSiotbcG2KMuXfbKyKTcHu9ujBp67jmbULJyYLDpsrpC1"
      ]
    },
    "node_modules/@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
      "keccak256": "0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329",
      "license": "MIT",
      "urls": [
        "bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95",
        "dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7"
      ]
    },
    "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
      "keccak256": "0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f",
      "license": "MIT",
      "urls": [
        "bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f",
        "dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x"
      ]
    },
    "node_modules/@openzeppelin/contracts/utils/Context.sol": {
      "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
      "license": "MIT",
      "urls": [
        "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
        "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
      ]
    },
    "node_modules/@openzeppelin/contracts/utils/Counters.sol": {
      "keccak256": "0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1",
      "license": "MIT",
      "urls": [
        "bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee",
        "dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu"
      ]
    },
    "node_modules/@openzeppelin/contracts/utils/Strings.sol": {
      "keccak256": "0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3",
      "license": "MIT",
      "urls": [
        "bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638",
        "dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9"
      ]
    },
    "node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
      "keccak256": "0xdb7f5c28fc61cda0bd8ab60ce288e206b791643bcd3ba464a70cbec18895a2f5",
      "license": "MIT",
      "urls": [
        "bzz-raw://bf52bdf22a33263f5ca6227a35faeac3b81e7d2c692fbcc6a079d488710c5900",
        "dweb:/ipfs/QmcmsjkP4yq3UhiJbvyzwufaY2EKh1zhHaRK8ATag2cpD2"
      ]
    },
    "node_modules/@openzeppelin/contracts/utils/cryptography/draft-EIP712.sol": {
      "keccak256": "0x6688fad58b9ec0286d40fa957152e575d5d8bd4c3aa80985efdb11b44f776ae7",
      "license": "MIT",
      "urls": [
        "bzz-raw://8bc00ab7f133cdaafd212a5cc6a16c8d37319721105d130c8e5af0c4e8f170ba",
        "dweb:/ipfs/QmVmf6LVMfFiEkvKYLzSv3bGHzymEW93AcUuFrNUdY3NtT"
      ]
    },
    "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
      "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
      "license": "MIT",
      "urls": [
        "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
        "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
      ]
    },
    "node_modules/@openzeppelin/contracts/utils/math/Math.sol": {
      "keccak256": "0xd15c3e400531f00203839159b2b8e7209c5158b35618f570c695b7e47f12e9f0",
      "license": "MIT",
      "urls": [
        "bzz-raw://b600b852e0597aa69989cc263111f02097e2827edc1bdc70306303e3af5e9929",
        "dweb:/ipfs/QmU4WfM28A1nDqghuuGeFmN3CnVrk6opWtiF65K4vhFPeC"
      ]
    },
    "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol": {
      "keccak256": "0x02686c31ccb9ee77a299fa5f47327af5271f251a707a0e24f321957166ff0434",
      "license": "MIT",
      "urls": [
        "bzz-raw://cb562d8ae1da31249ca0d8553df9f89ef4c3c110a018c4449dde68ae30e51ec1",
        "dweb:/ipfs/QmUwxjtTUYB89ymeV46TZPmTsGnYrKNcgTHk7MQA1MG3hj"
      ]
    }
  },
  "version": 1
}