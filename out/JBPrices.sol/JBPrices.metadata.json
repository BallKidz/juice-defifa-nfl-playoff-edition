{
  "compiler": {
    "version": "0.8.16+commit.07a7930e"
  },
  "language": "Solidity",
  "output": {
    "abi": [
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_owner",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "constructor"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "prod1",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "denominator",
            "type": "uint256"
          }
        ],
        "name": "PRBMath__MulDivOverflow",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "PRICE_FEED_ALREADY_EXISTS",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "PRICE_FEED_NOT_FOUND",
        "type": "error"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "uint256",
            "name": "currency",
            "type": "uint256"
          },
          {
            "indexed": true,
            "internalType": "uint256",
            "name": "base",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "contract IJBPriceFeed",
            "name": "feed",
            "type": "address"
          }
        ],
        "name": "AddFeed",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "previousOwner",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "address",
            "name": "newOwner",
            "type": "address"
          }
        ],
        "name": "OwnershipTransferred",
        "type": "event"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "_currency",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "_base",
            "type": "uint256"
          },
          {
            "internalType": "contract IJBPriceFeed",
            "name": "_feed",
            "type": "address"
          }
        ],
        "name": "addFeedFor",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "name": "feedFor",
        "outputs": [
          {
            "internalType": "contract IJBPriceFeed",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "owner",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "_currency",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "_base",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "_decimals",
            "type": "uint256"
          }
        ],
        "name": "priceFor",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "renounceOwnership",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "newOwner",
            "type": "address"
          }
        ],
        "name": "transferOwnership",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      }
    ],
    "devdoc": {
      "details": "Adheres to - IJBPrices: General interface for the methods in this contract that interact with the blockchain's state according to the protocol's rules.Inherits from - Ownable: Includes convenience functionality for checking a message sender's permissions before executing certain transactions.",
      "kind": "dev",
      "methods": {
        "addFeedFor(uint256,uint256,address)": {
          "details": "Current feeds can't be modified.",
          "params": {
            "_base": "The base currency unit being priced by the feed.",
            "_currency": "The currency units the feed's resulting price is in terms of.",
            "_feed": "The price feed being added."
          }
        },
        "constructor": {
          "params": {
            "_owner": "The address that will own the contract."
          }
        },
        "owner()": {
          "details": "Returns the address of the current owner."
        },
        "priceFor(uint256,uint256,uint256)": {
          "params": {
            "_base": "The base currency unit being priced.",
            "_currency": "The currency units the resulting price is in terms of.",
            "_decimals": "The number of decimals the returned fixed point price should include."
          },
          "returns": {
            "_0": "The price of the currency in terms of the base, as a fixed point number with the specified number of decimals."
          }
        },
        "renounceOwnership()": {
          "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
        },
        "transferOwnership(address)": {
          "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
        }
      },
      "stateVariables": {
        "feedFor": {
          "details": "The feed returns the number of `_currency` units that can be converted to 1 `_base` unit. _currency The currency units the feed's resulting price is in terms of. _base The base currency unit being priced by the feed."
        }
      },
      "version": 1
    },
    "userdoc": {
      "errors": {
        "PRBMath__MulDivOverflow(uint256,uint256)": [
          {
            "notice": "Emitted when the result overflows uint256."
          }
        ]
      },
      "kind": "user",
      "methods": {
        "addFeedFor(uint256,uint256,address)": {
          "notice": " Add a price feed for a currency in terms of the provided base currency."
        },
        "feedFor(uint256,uint256)": {
          "notice": " The available price feeds."
        },
        "priceFor(uint256,uint256,uint256)": {
          "notice": "Gets the number of `_currency` units that can be converted to 1 `_base` unit."
        }
      },
      "notice": " Manages and normalizes price feeds.",
      "version": 1
    }
  },
  "settings": {
    "compilationTarget": {
      "node_modules/@jbx-protocol/juice-contracts-v3/contracts/JBPrices.sol": "JBPrices"
    },
    "evmVersion": "london",
    "libraries": {},
    "metadata": {
      "bytecodeHash": "ipfs"
    },
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "remappings": [
      ":@jbx-protocol/=node_modules/@jbx-protocol/",
      ":@openzeppelin/=node_modules/@openzeppelin/",
      ":@paulrberg/=node_modules/@paulrberg/",
      ":ds-test/=lib/forge-std/lib/ds-test/src/",
      ":forge-std/=lib/forge-std/src/",
      ":prb-math/=node_modules/prb-math/"
    ]
  },
  "sources": {
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/JBPrices.sol": {
      "keccak256": "0x10a970373b21944efb41ab98177413884ea6742e2624a112713d56f7b1d80da3",
      "license": "MIT",
      "urls": [
        "bzz-raw://10eea97b5a1460e0da4fc0538621559f90e772d9ec7f03eee5767747f658868b",
        "dweb:/ipfs/QmXBPDEdmvnkrBbgDepEhWnUfnhNwd1NYrfvp6ys8Z6EA7"
      ]
    },
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/interfaces/IJBPriceFeed.sol": {
      "keccak256": "0x57c71282fec1b34b00cf991ffed2e36031c393e35bfa7ca5d723eb6572fb7122",
      "license": "MIT",
      "urls": [
        "bzz-raw://f51c97ac194d3120a2fb5428eeeff759b75b7cbc5708465afc914619016a7c9b",
        "dweb:/ipfs/QmemTqsGqoPqG97EsdRTMAbB6RfCz8CJxGYPNnDTV6LJ2t"
      ]
    },
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/interfaces/IJBPrices.sol": {
      "keccak256": "0x82a175b1f4b95b506c98406576cd59cbe04615e3df24f9cf3587b61b8ee323b1",
      "license": "MIT",
      "urls": [
        "bzz-raw://5493e394cf47fca51a4091f1e6d285cc9e4ff9916e5bdfb8e174fe652a2b9833",
        "dweb:/ipfs/QmTXafZatcjYbNMpUYYk1AWNZLkRFK7VVdAYYudGf4z3HJ"
      ]
    },
    "node_modules/@openzeppelin/contracts/access/Ownable.sol": {
      "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
      "license": "MIT",
      "urls": [
        "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
        "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
      ]
    },
    "node_modules/@openzeppelin/contracts/utils/Context.sol": {
      "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
      "license": "MIT",
      "urls": [
        "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
        "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
      ]
    },
    "node_modules/@paulrberg/contracts/math/PRBMath.sol": {
      "keccak256": "0x42821345981bc0434a90ba2268a2f5278dfe9e38166981d72fc7f3b776a29495",
      "license": "Unlicense",
      "urls": [
        "bzz-raw://92f28eea1e22d4e7998617483eef42d89eb97b364414cf41041c86aa633d3b47",
        "dweb:/ipfs/QmT5entVZFjbb3ZGZZvNAGqtwerCgwjCfN1Qmvf8jKPBXj"
      ]
    },
    "node_modules/prb-math/contracts/PRBMath.sol": {
      "keccak256": "0xed164c95012964f5e125b5d2b2d00471a4bdee4def618cd1fcf341d196011b61",
      "license": "Unlicense",
      "urls": [
        "bzz-raw://3ba3ad78675323279adfc09038eaa14f4cde3f3173e5d2d60b9c30bf7099aa7b",
        "dweb:/ipfs/QmV56KGJZQG681hwd7JQDv3KjAa9JSGF88ShGx8YBCuvcR"
      ]
    }
  },
  "version": 1
}