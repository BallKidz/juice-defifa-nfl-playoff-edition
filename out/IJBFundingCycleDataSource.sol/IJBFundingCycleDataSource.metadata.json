{
  "compiler": {
    "version": "0.8.16+commit.07a7930e"
  },
  "language": "Solidity",
  "output": {
    "abi": [
      {
        "inputs": [
          {
            "components": [
              {
                "internalType": "contract IJBPaymentTerminal",
                "name": "terminal",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "payer",
                "type": "address"
              },
              {
                "components": [
                  {
                    "internalType": "address",
                    "name": "token",
                    "type": "address"
                  },
                  {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                  },
                  {
                    "internalType": "uint256",
                    "name": "decimals",
                    "type": "uint256"
                  },
                  {
                    "internalType": "uint256",
                    "name": "currency",
                    "type": "uint256"
                  }
                ],
                "internalType": "struct JBTokenAmount",
                "name": "amount",
                "type": "tuple"
              },
              {
                "internalType": "uint256",
                "name": "projectId",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "currentFundingCycleConfiguration",
                "type": "uint256"
              },
              {
                "internalType": "address",
                "name": "beneficiary",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "weight",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "reservedRate",
                "type": "uint256"
              },
              {
                "internalType": "string",
                "name": "memo",
                "type": "string"
              },
              {
                "internalType": "bytes",
                "name": "metadata",
                "type": "bytes"
              }
            ],
            "internalType": "struct JBPayParamsData",
            "name": "_data",
            "type": "tuple"
          }
        ],
        "name": "payParams",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "weight",
            "type": "uint256"
          },
          {
            "internalType": "string",
            "name": "memo",
            "type": "string"
          },
          {
            "components": [
              {
                "internalType": "contract IJBPayDelegate",
                "name": "delegate",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "amount",
                "type": "uint256"
              }
            ],
            "internalType": "struct JBPayDelegateAllocation[]",
            "name": "delegateAllocations",
            "type": "tuple[]"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "components": [
              {
                "internalType": "contract IJBPaymentTerminal",
                "name": "terminal",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "holder",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "projectId",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "currentFundingCycleConfiguration",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "tokenCount",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "totalSupply",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "overflow",
                "type": "uint256"
              },
              {
                "components": [
                  {
                    "internalType": "address",
                    "name": "token",
                    "type": "address"
                  },
                  {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                  },
                  {
                    "internalType": "uint256",
                    "name": "decimals",
                    "type": "uint256"
                  },
                  {
                    "internalType": "uint256",
                    "name": "currency",
                    "type": "uint256"
                  }
                ],
                "internalType": "struct JBTokenAmount",
                "name": "reclaimAmount",
                "type": "tuple"
              },
              {
                "internalType": "bool",
                "name": "useTotalOverflow",
                "type": "bool"
              },
              {
                "internalType": "uint256",
                "name": "redemptionRate",
                "type": "uint256"
              },
              {
                "internalType": "string",
                "name": "memo",
                "type": "string"
              },
              {
                "internalType": "bytes",
                "name": "metadata",
                "type": "bytes"
              }
            ],
            "internalType": "struct JBRedeemParamsData",
            "name": "_data",
            "type": "tuple"
          }
        ],
        "name": "redeemParams",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "reclaimAmount",
            "type": "uint256"
          },
          {
            "internalType": "string",
            "name": "memo",
            "type": "string"
          },
          {
            "components": [
              {
                "internalType": "contract IJBRedemptionDelegate",
                "name": "delegate",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "amount",
                "type": "uint256"
              }
            ],
            "internalType": "struct JBRedemptionDelegateAllocation[]",
            "name": "delegateAllocations",
            "type": "tuple[]"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "bytes4",
            "name": "interfaceId",
            "type": "bytes4"
          }
        ],
        "name": "supportsInterface",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      }
    ],
    "devdoc": {
      "details": "Adheres to: IERC165 for adequate interface integration",
      "kind": "dev",
      "methods": {
        "payParams((address,address,(address,uint256,uint256,uint256),uint256,uint256,address,uint256,uint256,string,bytes))": {
          "params": {
            "_data": "the data passed to the data source in terminal.pay(..), as a JBPayParamsData struct: IJBPaymentTerminal terminal; address payer; JBTokenAmount amount; uint256 projectId; uint256 currentFundingCycleConfiguration; address beneficiary; uint256 weight; uint256 reservedRate; string memo; bytes metadata;"
          },
          "returns": {
            "delegateAllocations": "The amount to send to delegates instead of adding to the local balance.",
            "memo": "the memo to override the pay(..) memo",
            "weight": "the weight to use to override the funding cycle weight"
          }
        },
        "redeemParams((address,address,uint256,uint256,uint256,uint256,uint256,(address,uint256,uint256,uint256),bool,uint256,string,bytes))": {
          "params": {
            "_data": "the data passed to the data source in terminal.redeemTokensOf(..), as a JBRedeemParamsData struct: IJBPaymentTerminal terminal; address holder; uint256 projectId; uint256 currentFundingCycleConfiguration; uint256 tokenCount; uint256 totalSupply; uint256 overflow; JBTokenAmount reclaimAmount; bool useTotalOverflow; uint256 redemptionRate; uint256 ballotRedemptionRate; string memo; bytes metadata;"
          },
          "returns": {
            "delegateAllocations": "The amount to send to delegates instead of adding to the beneficiary.",
            "memo": "The memo to override the redeemTokensOf(..) memo.",
            "reclaimAmount": "The amount to claim, overriding the terminal logic."
          }
        },
        "supportsInterface(bytes4)": {
          "details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
        }
      },
      "title": "Datasource",
      "version": 1
    },
    "userdoc": {
      "kind": "user",
      "methods": {
        "payParams((address,address,(address,uint256,uint256,uint256),uint256,uint256,address,uint256,uint256,string,bytes))": {
          "notice": "The datasource implementation for JBPaymentTerminal.pay(..)"
        },
        "redeemParams((address,address,uint256,uint256,uint256,uint256,uint256,(address,uint256,uint256,uint256),bool,uint256,string,bytes))": {
          "notice": "The datasource implementation for JBPaymentTerminal.redeemTokensOf(..)"
        }
      },
      "notice": "The datasource is called by JBPaymentTerminal on pay and redemption, and provide an extra layer of logic to use  a custom weight, a custom memo and/or a pay/redeem delegate",
      "version": 1
    }
  },
  "settings": {
    "compilationTarget": {
      "node_modules/@jbx-protocol/juice-contracts-v3/contracts/interfaces/IJBFundingCycleDataSource.sol": "IJBFundingCycleDataSource"
    },
    "evmVersion": "london",
    "libraries": {},
    "metadata": {
      "bytecodeHash": "ipfs"
    },
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "remappings": [
      ":@jbx-protocol/=node_modules/@jbx-protocol/",
      ":@openzeppelin/=node_modules/@openzeppelin/",
      ":@paulrberg/=node_modules/@paulrberg/",
      ":ds-test/=lib/forge-std/lib/ds-test/src/",
      ":forge-std/=lib/forge-std/src/",
      ":prb-math/=node_modules/prb-math/"
    ]
  },
  "sources": {
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/interfaces/IJBFundingCycleDataSource.sol": {
      "keccak256": "0xa424abc146a61b69db83e511c064492da6fab6d8226e13d1580bc9fbc50d6738",
      "license": "MIT",
      "urls": [
        "bzz-raw://59c695ee79b9cd5447b83acb07c92627d747c6e6901e9145671c7ff12602f4c8",
        "dweb:/ipfs/Qma43bK5qkRkcWP9KNwfZ54WuMJsT2TAYfMXkdT1R7vRoK"
      ]
    },
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/interfaces/IJBPayDelegate.sol": {
      "keccak256": "0xa797de18b69eceba117e1f0b3810cf3cc2d2791417d580a5bdc510d1b868ab26",
      "license": "MIT",
      "urls": [
        "bzz-raw://36b214c091c62c54d22cbedb606c29919cb56f1c29acf9c397c948247a29dcc0",
        "dweb:/ipfs/QmSzxHs8xNFqNfxZb1igvPHk7vXA5vUsGQ6AMfJ8jx8Ktu"
      ]
    },
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/interfaces/IJBPaymentTerminal.sol": {
      "keccak256": "0xb7826f5ed609359ce322c09e83236c47ba385df1c3cad3607e56fd0a2e00eee2",
      "license": "MIT",
      "urls": [
        "bzz-raw://cbb0de0e73f73a04fcfc8f08cab3588b6d608cf5268af737cff6a530f6062c95",
        "dweb:/ipfs/QmPGb8aEbZNHNnrCvuGH52RLvV3kjL3agxQiFrjHoLHaup"
      ]
    },
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/interfaces/IJBRedemptionDelegate.sol": {
      "keccak256": "0x172d2c0be65e72e54f71ae521907067f0fa30e8ca05c4f88826903208aa437e2",
      "license": "MIT",
      "urls": [
        "bzz-raw://266a32bd8feea10051a4e243e14692c62e99de7048cda2f541998b4cc64cbd51",
        "dweb:/ipfs/QmPfqsbSZdpQee4WbisK9ZnZRrXbUVvSpbfnrEKGfjzz9N"
      ]
    },
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/structs/JBDidPayData.sol": {
      "keccak256": "0xf3c664309b37790f16047ae97b0459889ae0242dfcde7fc8902c8d10c7f8e6b6",
      "license": "MIT",
      "urls": [
        "bzz-raw://ea74b762604ffa0e45181d8ec31b130198546014f6360d15076af79952bc5874",
        "dweb:/ipfs/QmdukMbucvU75BpK4TsYKoqjpQ2Nhs9yjFVzcKGkG3SpSV"
      ]
    },
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/structs/JBDidRedeemData.sol": {
      "keccak256": "0xe2c401f39723a7ce915b8bef328744c66daaf57460843964b941456c2258a412",
      "license": "MIT",
      "urls": [
        "bzz-raw://c3bddd802ff895aa54f047d2385c7c253f9e0cd5b23d4d84439c1590e7e66ccb",
        "dweb:/ipfs/QmXdSDWgEWMtJDqMhHrBCZnBM4qETXRPteB1wEGZBRxuUb"
      ]
    },
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/structs/JBPayDelegateAllocation.sol": {
      "keccak256": "0xb4e558dc62231d89e9b48998012577d22c3e52b58e23401f22d9096827f6ea0c",
      "license": "MIT",
      "urls": [
        "bzz-raw://b6617a7479709d2a68fbc6686c9087fd7339ffcbb4823010287eb2ad979f23dd",
        "dweb:/ipfs/QmVT66SXpY9h5sD8nJq7VALbfWdeHwUxAeBPymaHg1TMNM"
      ]
    },
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/structs/JBPayParamsData.sol": {
      "keccak256": "0x05007b26feb5d9a026b883c6d734a341b5a49ef7b8215fb40507882e2c14e24d",
      "license": "MIT",
      "urls": [
        "bzz-raw://52ef2d3c61f06243aead9afcb043299f362ff9f7b259386a88c4454b429436c0",
        "dweb:/ipfs/QmVpCJ1NyBGBDgNQpmojhjPmqx2gryzopGLgawHE26mwPr"
      ]
    },
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/structs/JBRedeemParamsData.sol": {
      "keccak256": "0x5065a824ebb34952f016c6dfa47e8a7ac28427b719470e74a41022c11ace7788",
      "license": "MIT",
      "urls": [
        "bzz-raw://0006b9aeb387a8866d9f619de374d7618159e6a25d562f2c8fca984e2a4b9fea",
        "dweb:/ipfs/QmUfWBMHx6CxN921vM5RktJTP5AYEA3v2xpnMX5LGubhBC"
      ]
    },
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/structs/JBRedemptionDelegateAllocation.sol": {
      "keccak256": "0x10c29d33dd0d875a0d4692a2b9a9355c2ebf433cc06a9a60253d4366b60d4d31",
      "license": "MIT",
      "urls": [
        "bzz-raw://76614755cf61b78b3d3263ddcbf7c7146986374e4cdf5cc2abb67c523d957142",
        "dweb:/ipfs/QmVNGDmTCcfYxgbA83yURstmAU7vtAtjTh9zNFRwKMmTH1"
      ]
    },
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/structs/JBTokenAmount.sol": {
      "keccak256": "0x4a778e779ba257ba5638c5469e07a4d21b55a3128d56db5a0fdfacb1f3301c51",
      "license": "MIT",
      "urls": [
        "bzz-raw://fdb8302e06c5b4e1e91d204ed735d8d5db5bb3648200c144d7c545678010a44d",
        "dweb:/ipfs/QmTpffbt3FShkk8LDjsonVGnecbbNMUL8QHYQM7AFcMa54"
      ]
    },
    "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
      "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
      "license": "MIT",
      "urls": [
        "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
        "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
      ]
    }
  },
  "version": 1
}