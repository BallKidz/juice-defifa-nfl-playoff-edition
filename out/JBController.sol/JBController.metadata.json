{
  "compiler": {
    "version": "0.8.16+commit.07a7930e"
  },
  "language": "Solidity",
  "output": {
    "abi": [
      {
        "inputs": [
          {
            "internalType": "contract IJBOperatorStore",
            "name": "_operatorStore",
            "type": "address"
          },
          {
            "internalType": "contract IJBProjects",
            "name": "_projects",
            "type": "address"
          },
          {
            "internalType": "contract IJBDirectory",
            "name": "_directory",
            "type": "address"
          },
          {
            "internalType": "contract IJBFundingCycleStore",
            "name": "_fundingCycleStore",
            "type": "address"
          },
          {
            "internalType": "contract IJBTokenStore",
            "name": "_tokenStore",
            "type": "address"
          },
          {
            "internalType": "contract IJBSplitsStore",
            "name": "_splitsStore",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "constructor"
      },
      {
        "inputs": [],
        "name": "BURN_PAUSED_AND_SENDER_NOT_VALID_TERMINAL_DELEGATE",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "CANT_MIGRATE_TO_CURRENT_CONTROLLER",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "FUNDING_CYCLE_ALREADY_LAUNCHED",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "INVALID_BALLOT_REDEMPTION_RATE",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "INVALID_DISTRIBUTION_LIMIT",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "INVALID_DISTRIBUTION_LIMIT_CURRENCY",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "INVALID_OVERFLOW_ALLOWANCE",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "INVALID_OVERFLOW_ALLOWANCE_CURRENCY",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "INVALID_REDEMPTION_RATE",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "INVALID_RESERVED_RATE",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "MIGRATION_NOT_ALLOWED",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "MINT_NOT_ALLOWED_AND_NOT_TERMINAL_DELEGATE",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "NOT_CURRENT_CONTROLLER",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "NO_BURNABLE_TOKENS",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "OVERFLOW_ALERT",
        "type": "error"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "prod1",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "denominator",
            "type": "uint256"
          }
        ],
        "name": "PRBMath__MulDivOverflow",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "UNAUTHORIZED",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "ZERO_TOKENS_TO_MINT",
        "type": "error"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "holder",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "uint256",
            "name": "projectId",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "tokenCount",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "string",
            "name": "memo",
            "type": "string"
          },
          {
            "indexed": false,
            "internalType": "address",
            "name": "caller",
            "type": "address"
          }
        ],
        "name": "BurnTokens",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "uint256",
            "name": "fundingCycleConfiguration",
            "type": "uint256"
          },
          {
            "indexed": true,
            "internalType": "uint256",
            "name": "fundingCycleNumber",
            "type": "uint256"
          },
          {
            "indexed": true,
            "internalType": "uint256",
            "name": "projectId",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "address",
            "name": "beneficiary",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "tokenCount",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "beneficiaryTokenCount",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "string",
            "name": "memo",
            "type": "string"
          },
          {
            "indexed": false,
            "internalType": "address",
            "name": "caller",
            "type": "address"
          }
        ],
        "name": "DistributeReservedTokens",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "uint256",
            "name": "projectId",
            "type": "uint256"
          },
          {
            "indexed": true,
            "internalType": "uint256",
            "name": "domain",
            "type": "uint256"
          },
          {
            "indexed": true,
            "internalType": "uint256",
            "name": "group",
            "type": "uint256"
          },
          {
            "components": [
              {
                "internalType": "bool",
                "name": "preferClaimed",
                "type": "bool"
              },
              {
                "internalType": "bool",
                "name": "preferAddToBalance",
                "type": "bool"
              },
              {
                "internalType": "uint256",
                "name": "percent",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "projectId",
                "type": "uint256"
              },
              {
                "internalType": "address payable",
                "name": "beneficiary",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "lockedUntil",
                "type": "uint256"
              },
              {
                "internalType": "contract IJBSplitAllocator",
                "name": "allocator",
                "type": "address"
              }
            ],
            "indexed": false,
            "internalType": "struct JBSplit",
            "name": "split",
            "type": "tuple"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "tokenCount",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "address",
            "name": "caller",
            "type": "address"
          }
        ],
        "name": "DistributeToReservedTokenSplit",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "configuration",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "projectId",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "string",
            "name": "memo",
            "type": "string"
          },
          {
            "indexed": false,
            "internalType": "address",
            "name": "caller",
            "type": "address"
          }
        ],
        "name": "LaunchFundingCycles",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "configuration",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "projectId",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "string",
            "name": "memo",
            "type": "string"
          },
          {
            "indexed": false,
            "internalType": "address",
            "name": "caller",
            "type": "address"
          }
        ],
        "name": "LaunchProject",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "uint256",
            "name": "projectId",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "contract IJBMigratable",
            "name": "to",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "address",
            "name": "caller",
            "type": "address"
          }
        ],
        "name": "Migrate",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "beneficiary",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "uint256",
            "name": "projectId",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "tokenCount",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "beneficiaryTokenCount",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "string",
            "name": "memo",
            "type": "string"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "reservedRate",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "address",
            "name": "caller",
            "type": "address"
          }
        ],
        "name": "MintTokens",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "uint256",
            "name": "projectId",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "address",
            "name": "from",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "address",
            "name": "caller",
            "type": "address"
          }
        ],
        "name": "PrepMigration",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "configuration",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "projectId",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "string",
            "name": "memo",
            "type": "string"
          },
          {
            "indexed": false,
            "internalType": "address",
            "name": "caller",
            "type": "address"
          }
        ],
        "name": "ReconfigureFundingCycles",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "uint256",
            "name": "fundingCycleConfiguration",
            "type": "uint256"
          },
          {
            "indexed": true,
            "internalType": "uint256",
            "name": "fundingCycleNumber",
            "type": "uint256"
          },
          {
            "indexed": true,
            "internalType": "uint256",
            "name": "projectId",
            "type": "uint256"
          },
          {
            "components": [
              {
                "internalType": "contract IJBPaymentTerminal",
                "name": "terminal",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "token",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "distributionLimit",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "distributionLimitCurrency",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "overflowAllowance",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "overflowAllowanceCurrency",
                "type": "uint256"
              }
            ],
            "indexed": false,
            "internalType": "struct JBFundAccessConstraints",
            "name": "constraints",
            "type": "tuple"
          },
          {
            "indexed": false,
            "internalType": "address",
            "name": "caller",
            "type": "address"
          }
        ],
        "name": "SetFundAccessConstraints",
        "type": "event"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_holder",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "_projectId",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "_tokenCount",
            "type": "uint256"
          },
          {
            "internalType": "string",
            "name": "_memo",
            "type": "string"
          },
          {
            "internalType": "bool",
            "name": "_preferClaimedTokens",
            "type": "bool"
          }
        ],
        "name": "burnTokensOf",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "_projectId",
            "type": "uint256"
          }
        ],
        "name": "currentFundingCycleOf",
        "outputs": [
          {
            "components": [
              {
                "internalType": "uint256",
                "name": "number",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "configuration",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "basedOn",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "start",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "duration",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "weight",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "discountRate",
                "type": "uint256"
              },
              {
                "internalType": "contract IJBFundingCycleBallot",
                "name": "ballot",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "metadata",
                "type": "uint256"
              }
            ],
            "internalType": "struct JBFundingCycle",
            "name": "fundingCycle",
            "type": "tuple"
          },
          {
            "components": [
              {
                "components": [
                  {
                    "internalType": "bool",
                    "name": "allowSetTerminals",
                    "type": "bool"
                  },
                  {
                    "internalType": "bool",
                    "name": "allowSetController",
                    "type": "bool"
                  },
                  {
                    "internalType": "bool",
                    "name": "pauseTransfers",
                    "type": "bool"
                  }
                ],
                "internalType": "struct JBGlobalFundingCycleMetadata",
                "name": "global",
                "type": "tuple"
              },
              {
                "internalType": "uint256",
                "name": "reservedRate",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "redemptionRate",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "ballotRedemptionRate",
                "type": "uint256"
              },
              {
                "internalType": "bool",
                "name": "pausePay",
                "type": "bool"
              },
              {
                "internalType": "bool",
                "name": "pauseDistributions",
                "type": "bool"
              },
              {
                "internalType": "bool",
                "name": "pauseRedeem",
                "type": "bool"
              },
              {
                "internalType": "bool",
                "name": "pauseBurn",
                "type": "bool"
              },
              {
                "internalType": "bool",
                "name": "allowMinting",
                "type": "bool"
              },
              {
                "internalType": "bool",
                "name": "allowTerminalMigration",
                "type": "bool"
              },
              {
                "internalType": "bool",
                "name": "allowControllerMigration",
                "type": "bool"
              },
              {
                "internalType": "bool",
                "name": "holdFees",
                "type": "bool"
              },
              {
                "internalType": "bool",
                "name": "preferClaimedTokenOverride",
                "type": "bool"
              },
              {
                "internalType": "bool",
                "name": "useTotalOverflowForRedemptions",
                "type": "bool"
              },
              {
                "internalType": "bool",
                "name": "useDataSourceForPay",
                "type": "bool"
              },
              {
                "internalType": "bool",
                "name": "useDataSourceForRedeem",
                "type": "bool"
              },
              {
                "internalType": "address",
                "name": "dataSource",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "metadata",
                "type": "uint256"
              }
            ],
            "internalType": "struct JBFundingCycleMetadata",
            "name": "metadata",
            "type": "tuple"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "directory",
        "outputs": [
          {
            "internalType": "contract IJBDirectory",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "_projectId",
            "type": "uint256"
          },
          {
            "internalType": "string",
            "name": "_memo",
            "type": "string"
          }
        ],
        "name": "distributeReservedTokensOf",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "_projectId",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "_configuration",
            "type": "uint256"
          },
          {
            "internalType": "contract IJBPaymentTerminal",
            "name": "_terminal",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "_token",
            "type": "address"
          }
        ],
        "name": "distributionLimitOf",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "fundingCycleStore",
        "outputs": [
          {
            "internalType": "contract IJBFundingCycleStore",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "_projectId",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "_configuration",
            "type": "uint256"
          }
        ],
        "name": "getFundingCycleOf",
        "outputs": [
          {
            "components": [
              {
                "internalType": "uint256",
                "name": "number",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "configuration",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "basedOn",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "start",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "duration",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "weight",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "discountRate",
                "type": "uint256"
              },
              {
                "internalType": "contract IJBFundingCycleBallot",
                "name": "ballot",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "metadata",
                "type": "uint256"
              }
            ],
            "internalType": "struct JBFundingCycle",
            "name": "fundingCycle",
            "type": "tuple"
          },
          {
            "components": [
              {
                "components": [
                  {
                    "internalType": "bool",
                    "name": "allowSetTerminals",
                    "type": "bool"
                  },
                  {
                    "internalType": "bool",
                    "name": "allowSetController",
                    "type": "bool"
                  },
                  {
                    "internalType": "bool",
                    "name": "pauseTransfers",
                    "type": "bool"
                  }
                ],
                "internalType": "struct JBGlobalFundingCycleMetadata",
                "name": "global",
                "type": "tuple"
              },
              {
                "internalType": "uint256",
                "name": "reservedRate",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "redemptionRate",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "ballotRedemptionRate",
                "type": "uint256"
              },
              {
                "internalType": "bool",
                "name": "pausePay",
                "type": "bool"
              },
              {
                "internalType": "bool",
                "name": "pauseDistributions",
                "type": "bool"
              },
              {
                "internalType": "bool",
                "name": "pauseRedeem",
                "type": "bool"
              },
              {
                "internalType": "bool",
                "name": "pauseBurn",
                "type": "bool"
              },
              {
                "internalType": "bool",
                "name": "allowMinting",
                "type": "bool"
              },
              {
                "internalType": "bool",
                "name": "allowTerminalMigration",
                "type": "bool"
              },
              {
                "internalType": "bool",
                "name": "allowControllerMigration",
                "type": "bool"
              },
              {
                "internalType": "bool",
                "name": "holdFees",
                "type": "bool"
              },
              {
                "internalType": "bool",
                "name": "preferClaimedTokenOverride",
                "type": "bool"
              },
              {
                "internalType": "bool",
                "name": "useTotalOverflowForRedemptions",
                "type": "bool"
              },
              {
                "internalType": "bool",
                "name": "useDataSourceForPay",
                "type": "bool"
              },
              {
                "internalType": "bool",
                "name": "useDataSourceForRedeem",
                "type": "bool"
              },
              {
                "internalType": "address",
                "name": "dataSource",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "metadata",
                "type": "uint256"
              }
            ],
            "internalType": "struct JBFundingCycleMetadata",
            "name": "metadata",
            "type": "tuple"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "_projectId",
            "type": "uint256"
          }
        ],
        "name": "latestConfiguredFundingCycleOf",
        "outputs": [
          {
            "components": [
              {
                "internalType": "uint256",
                "name": "number",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "configuration",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "basedOn",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "start",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "duration",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "weight",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "discountRate",
                "type": "uint256"
              },
              {
                "internalType": "contract IJBFundingCycleBallot",
                "name": "ballot",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "metadata",
                "type": "uint256"
              }
            ],
            "internalType": "struct JBFundingCycle",
            "name": "fundingCycle",
            "type": "tuple"
          },
          {
            "components": [
              {
                "components": [
                  {
                    "internalType": "bool",
                    "name": "allowSetTerminals",
                    "type": "bool"
                  },
                  {
                    "internalType": "bool",
                    "name": "allowSetController",
                    "type": "bool"
                  },
                  {
                    "internalType": "bool",
                    "name": "pauseTransfers",
                    "type": "bool"
                  }
                ],
                "internalType": "struct JBGlobalFundingCycleMetadata",
                "name": "global",
                "type": "tuple"
              },
              {
                "internalType": "uint256",
                "name": "reservedRate",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "redemptionRate",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "ballotRedemptionRate",
                "type": "uint256"
              },
              {
                "internalType": "bool",
                "name": "pausePay",
                "type": "bool"
              },
              {
                "internalType": "bool",
                "name": "pauseDistributions",
                "type": "bool"
              },
              {
                "internalType": "bool",
                "name": "pauseRedeem",
                "type": "bool"
              },
              {
                "internalType": "bool",
                "name": "pauseBurn",
                "type": "bool"
              },
              {
                "internalType": "bool",
                "name": "allowMinting",
                "type": "bool"
              },
              {
                "internalType": "bool",
                "name": "allowTerminalMigration",
                "type": "bool"
              },
              {
                "internalType": "bool",
                "name": "allowControllerMigration",
                "type": "bool"
              },
              {
                "internalType": "bool",
                "name": "holdFees",
                "type": "bool"
              },
              {
                "internalType": "bool",
                "name": "preferClaimedTokenOverride",
                "type": "bool"
              },
              {
                "internalType": "bool",
                "name": "useTotalOverflowForRedemptions",
                "type": "bool"
              },
              {
                "internalType": "bool",
                "name": "useDataSourceForPay",
                "type": "bool"
              },
              {
                "internalType": "bool",
                "name": "useDataSourceForRedeem",
                "type": "bool"
              },
              {
                "internalType": "address",
                "name": "dataSource",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "metadata",
                "type": "uint256"
              }
            ],
            "internalType": "struct JBFundingCycleMetadata",
            "name": "metadata",
            "type": "tuple"
          },
          {
            "internalType": "enum JBBallotState",
            "name": "ballotState",
            "type": "uint8"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "_projectId",
            "type": "uint256"
          },
          {
            "components": [
              {
                "internalType": "uint256",
                "name": "duration",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "weight",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "discountRate",
                "type": "uint256"
              },
              {
                "internalType": "contract IJBFundingCycleBallot",
                "name": "ballot",
                "type": "address"
              }
            ],
            "internalType": "struct JBFundingCycleData",
            "name": "_data",
            "type": "tuple"
          },
          {
            "components": [
              {
                "components": [
                  {
                    "internalType": "bool",
                    "name": "allowSetTerminals",
                    "type": "bool"
                  },
                  {
                    "internalType": "bool",
                    "name": "allowSetController",
                    "type": "bool"
                  },
                  {
                    "internalType": "bool",
                    "name": "pauseTransfers",
                    "type": "bool"
                  }
                ],
                "internalType": "struct JBGlobalFundingCycleMetadata",
                "name": "global",
                "type": "tuple"
              },
              {
                "internalType": "uint256",
                "name": "reservedRate",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "redemptionRate",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "ballotRedemptionRate",
                "type": "uint256"
              },
              {
                "internalType": "bool",
                "name": "pausePay",
                "type": "bool"
              },
              {
                "internalType": "bool",
                "name": "pauseDistributions",
                "type": "bool"
              },
              {
                "internalType": "bool",
                "name": "pauseRedeem",
                "type": "bool"
              },
              {
                "internalType": "bool",
                "name": "pauseBurn",
                "type": "bool"
              },
              {
                "internalType": "bool",
                "name": "allowMinting",
                "type": "bool"
              },
              {
                "internalType": "bool",
                "name": "allowTerminalMigration",
                "type": "bool"
              },
              {
                "internalType": "bool",
                "name": "allowControllerMigration",
                "type": "bool"
              },
              {
                "internalType": "bool",
                "name": "holdFees",
                "type": "bool"
              },
              {
                "internalType": "bool",
                "name": "preferClaimedTokenOverride",
                "type": "bool"
              },
              {
                "internalType": "bool",
                "name": "useTotalOverflowForRedemptions",
                "type": "bool"
              },
              {
                "internalType": "bool",
                "name": "useDataSourceForPay",
                "type": "bool"
              },
              {
                "internalType": "bool",
                "name": "useDataSourceForRedeem",
                "type": "bool"
              },
              {
                "internalType": "address",
                "name": "dataSource",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "metadata",
                "type": "uint256"
              }
            ],
            "internalType": "struct JBFundingCycleMetadata",
            "name": "_metadata",
            "type": "tuple"
          },
          {
            "internalType": "uint256",
            "name": "_mustStartAtOrAfter",
            "type": "uint256"
          },
          {
            "components": [
              {
                "internalType": "uint256",
                "name": "group",
                "type": "uint256"
              },
              {
                "components": [
                  {
                    "internalType": "bool",
                    "name": "preferClaimed",
                    "type": "bool"
                  },
                  {
                    "internalType": "bool",
                    "name": "preferAddToBalance",
                    "type": "bool"
                  },
                  {
                    "internalType": "uint256",
                    "name": "percent",
                    "type": "uint256"
                  },
                  {
                    "internalType": "uint256",
                    "name": "projectId",
                    "type": "uint256"
                  },
                  {
                    "internalType": "address payable",
                    "name": "beneficiary",
                    "type": "address"
                  },
                  {
                    "internalType": "uint256",
                    "name": "lockedUntil",
                    "type": "uint256"
                  },
                  {
                    "internalType": "contract IJBSplitAllocator",
                    "name": "allocator",
                    "type": "address"
                  }
                ],
                "internalType": "struct JBSplit[]",
                "name": "splits",
                "type": "tuple[]"
              }
            ],
            "internalType": "struct JBGroupedSplits[]",
            "name": "_groupedSplits",
            "type": "tuple[]"
          },
          {
            "components": [
              {
                "internalType": "contract IJBPaymentTerminal",
                "name": "terminal",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "token",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "distributionLimit",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "distributionLimitCurrency",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "overflowAllowance",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "overflowAllowanceCurrency",
                "type": "uint256"
              }
            ],
            "internalType": "struct JBFundAccessConstraints[]",
            "name": "_fundAccessConstraints",
            "type": "tuple[]"
          },
          {
            "internalType": "contract IJBPaymentTerminal[]",
            "name": "_terminals",
            "type": "address[]"
          },
          {
            "internalType": "string",
            "name": "_memo",
            "type": "string"
          }
        ],
        "name": "launchFundingCyclesFor",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "configuration",
            "type": "uint256"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_owner",
            "type": "address"
          },
          {
            "components": [
              {
                "internalType": "string",
                "name": "content",
                "type": "string"
              },
              {
                "internalType": "uint256",
                "name": "domain",
                "type": "uint256"
              }
            ],
            "internalType": "struct JBProjectMetadata",
            "name": "_projectMetadata",
            "type": "tuple"
          },
          {
            "components": [
              {
                "internalType": "uint256",
                "name": "duration",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "weight",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "discountRate",
                "type": "uint256"
              },
              {
                "internalType": "contract IJBFundingCycleBallot",
                "name": "ballot",
                "type": "address"
              }
            ],
            "internalType": "struct JBFundingCycleData",
            "name": "_data",
            "type": "tuple"
          },
          {
            "components": [
              {
                "components": [
                  {
                    "internalType": "bool",
                    "name": "allowSetTerminals",
                    "type": "bool"
                  },
                  {
                    "internalType": "bool",
                    "name": "allowSetController",
                    "type": "bool"
                  },
                  {
                    "internalType": "bool",
                    "name": "pauseTransfers",
                    "type": "bool"
                  }
                ],
                "internalType": "struct JBGlobalFundingCycleMetadata",
                "name": "global",
                "type": "tuple"
              },
              {
                "internalType": "uint256",
                "name": "reservedRate",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "redemptionRate",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "ballotRedemptionRate",
                "type": "uint256"
              },
              {
                "internalType": "bool",
                "name": "pausePay",
                "type": "bool"
              },
              {
                "internalType": "bool",
                "name": "pauseDistributions",
                "type": "bool"
              },
              {
                "internalType": "bool",
                "name": "pauseRedeem",
                "type": "bool"
              },
              {
                "internalType": "bool",
                "name": "pauseBurn",
                "type": "bool"
              },
              {
                "internalType": "bool",
                "name": "allowMinting",
                "type": "bool"
              },
              {
                "internalType": "bool",
                "name": "allowTerminalMigration",
                "type": "bool"
              },
              {
                "internalType": "bool",
                "name": "allowControllerMigration",
                "type": "bool"
              },
              {
                "internalType": "bool",
                "name": "holdFees",
                "type": "bool"
              },
              {
                "internalType": "bool",
                "name": "preferClaimedTokenOverride",
                "type": "bool"
              },
              {
                "internalType": "bool",
                "name": "useTotalOverflowForRedemptions",
                "type": "bool"
              },
              {
                "internalType": "bool",
                "name": "useDataSourceForPay",
                "type": "bool"
              },
              {
                "internalType": "bool",
                "name": "useDataSourceForRedeem",
                "type": "bool"
              },
              {
                "internalType": "address",
                "name": "dataSource",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "metadata",
                "type": "uint256"
              }
            ],
            "internalType": "struct JBFundingCycleMetadata",
            "name": "_metadata",
            "type": "tuple"
          },
          {
            "internalType": "uint256",
            "name": "_mustStartAtOrAfter",
            "type": "uint256"
          },
          {
            "components": [
              {
                "internalType": "uint256",
                "name": "group",
                "type": "uint256"
              },
              {
                "components": [
                  {
                    "internalType": "bool",
                    "name": "preferClaimed",
                    "type": "bool"
                  },
                  {
                    "internalType": "bool",
                    "name": "preferAddToBalance",
                    "type": "bool"
                  },
                  {
                    "internalType": "uint256",
                    "name": "percent",
                    "type": "uint256"
                  },
                  {
                    "internalType": "uint256",
                    "name": "projectId",
                    "type": "uint256"
                  },
                  {
                    "internalType": "address payable",
                    "name": "beneficiary",
                    "type": "address"
                  },
                  {
                    "internalType": "uint256",
                    "name": "lockedUntil",
                    "type": "uint256"
                  },
                  {
                    "internalType": "contract IJBSplitAllocator",
                    "name": "allocator",
                    "type": "address"
                  }
                ],
                "internalType": "struct JBSplit[]",
                "name": "splits",
                "type": "tuple[]"
              }
            ],
            "internalType": "struct JBGroupedSplits[]",
            "name": "_groupedSplits",
            "type": "tuple[]"
          },
          {
            "components": [
              {
                "internalType": "contract IJBPaymentTerminal",
                "name": "terminal",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "token",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "distributionLimit",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "distributionLimitCurrency",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "overflowAllowance",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "overflowAllowanceCurrency",
                "type": "uint256"
              }
            ],
            "internalType": "struct JBFundAccessConstraints[]",
            "name": "_fundAccessConstraints",
            "type": "tuple[]"
          },
          {
            "internalType": "contract IJBPaymentTerminal[]",
            "name": "_terminals",
            "type": "address[]"
          },
          {
            "internalType": "string",
            "name": "_memo",
            "type": "string"
          }
        ],
        "name": "launchProjectFor",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "projectId",
            "type": "uint256"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "_projectId",
            "type": "uint256"
          },
          {
            "internalType": "contract IJBMigratable",
            "name": "_to",
            "type": "address"
          }
        ],
        "name": "migrate",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "_projectId",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "_tokenCount",
            "type": "uint256"
          },
          {
            "internalType": "address",
            "name": "_beneficiary",
            "type": "address"
          },
          {
            "internalType": "string",
            "name": "_memo",
            "type": "string"
          },
          {
            "internalType": "bool",
            "name": "_preferClaimedTokens",
            "type": "bool"
          },
          {
            "internalType": "bool",
            "name": "_useReservedRate",
            "type": "bool"
          }
        ],
        "name": "mintTokensOf",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "beneficiaryTokenCount",
            "type": "uint256"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "operatorStore",
        "outputs": [
          {
            "internalType": "contract IJBOperatorStore",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "_projectId",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "_configuration",
            "type": "uint256"
          },
          {
            "internalType": "contract IJBPaymentTerminal",
            "name": "_terminal",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "_token",
            "type": "address"
          }
        ],
        "name": "overflowAllowanceOf",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "_projectId",
            "type": "uint256"
          },
          {
            "internalType": "address",
            "name": "_from",
            "type": "address"
          }
        ],
        "name": "prepForMigrationOf",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "projects",
        "outputs": [
          {
            "internalType": "contract IJBProjects",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "_projectId",
            "type": "uint256"
          }
        ],
        "name": "queuedFundingCycleOf",
        "outputs": [
          {
            "components": [
              {
                "internalType": "uint256",
                "name": "number",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "configuration",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "basedOn",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "start",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "duration",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "weight",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "discountRate",
                "type": "uint256"
              },
              {
                "internalType": "contract IJBFundingCycleBallot",
                "name": "ballot",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "metadata",
                "type": "uint256"
              }
            ],
            "internalType": "struct JBFundingCycle",
            "name": "fundingCycle",
            "type": "tuple"
          },
          {
            "components": [
              {
                "components": [
                  {
                    "internalType": "bool",
                    "name": "allowSetTerminals",
                    "type": "bool"
                  },
                  {
                    "internalType": "bool",
                    "name": "allowSetController",
                    "type": "bool"
                  },
                  {
                    "internalType": "bool",
                    "name": "pauseTransfers",
                    "type": "bool"
                  }
                ],
                "internalType": "struct JBGlobalFundingCycleMetadata",
                "name": "global",
                "type": "tuple"
              },
              {
                "internalType": "uint256",
                "name": "reservedRate",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "redemptionRate",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "ballotRedemptionRate",
                "type": "uint256"
              },
              {
                "internalType": "bool",
                "name": "pausePay",
                "type": "bool"
              },
              {
                "internalType": "bool",
                "name": "pauseDistributions",
                "type": "bool"
              },
              {
                "internalType": "bool",
                "name": "pauseRedeem",
                "type": "bool"
              },
              {
                "internalType": "bool",
                "name": "pauseBurn",
                "type": "bool"
              },
              {
                "internalType": "bool",
                "name": "allowMinting",
                "type": "bool"
              },
              {
                "internalType": "bool",
                "name": "allowTerminalMigration",
                "type": "bool"
              },
              {
                "internalType": "bool",
                "name": "allowControllerMigration",
                "type": "bool"
              },
              {
                "internalType": "bool",
                "name": "holdFees",
                "type": "bool"
              },
              {
                "internalType": "bool",
                "name": "preferClaimedTokenOverride",
                "type": "bool"
              },
              {
                "internalType": "bool",
                "name": "useTotalOverflowForRedemptions",
                "type": "bool"
              },
              {
                "internalType": "bool",
                "name": "useDataSourceForPay",
                "type": "bool"
              },
              {
                "internalType": "bool",
                "name": "useDataSourceForRedeem",
                "type": "bool"
              },
              {
                "internalType": "address",
                "name": "dataSource",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "metadata",
                "type": "uint256"
              }
            ],
            "internalType": "struct JBFundingCycleMetadata",
            "name": "metadata",
            "type": "tuple"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "_projectId",
            "type": "uint256"
          },
          {
            "components": [
              {
                "internalType": "uint256",
                "name": "duration",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "weight",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "discountRate",
                "type": "uint256"
              },
              {
                "internalType": "contract IJBFundingCycleBallot",
                "name": "ballot",
                "type": "address"
              }
            ],
            "internalType": "struct JBFundingCycleData",
            "name": "_data",
            "type": "tuple"
          },
          {
            "components": [
              {
                "components": [
                  {
                    "internalType": "bool",
                    "name": "allowSetTerminals",
                    "type": "bool"
                  },
                  {
                    "internalType": "bool",
                    "name": "allowSetController",
                    "type": "bool"
                  },
                  {
                    "internalType": "bool",
                    "name": "pauseTransfers",
                    "type": "bool"
                  }
                ],
                "internalType": "struct JBGlobalFundingCycleMetadata",
                "name": "global",
                "type": "tuple"
              },
              {
                "internalType": "uint256",
                "name": "reservedRate",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "redemptionRate",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "ballotRedemptionRate",
                "type": "uint256"
              },
              {
                "internalType": "bool",
                "name": "pausePay",
                "type": "bool"
              },
              {
                "internalType": "bool",
                "name": "pauseDistributions",
                "type": "bool"
              },
              {
                "internalType": "bool",
                "name": "pauseRedeem",
                "type": "bool"
              },
              {
                "internalType": "bool",
                "name": "pauseBurn",
                "type": "bool"
              },
              {
                "internalType": "bool",
                "name": "allowMinting",
                "type": "bool"
              },
              {
                "internalType": "bool",
                "name": "allowTerminalMigration",
                "type": "bool"
              },
              {
                "internalType": "bool",
                "name": "allowControllerMigration",
                "type": "bool"
              },
              {
                "internalType": "bool",
                "name": "holdFees",
                "type": "bool"
              },
              {
                "internalType": "bool",
                "name": "preferClaimedTokenOverride",
                "type": "bool"
              },
              {
                "internalType": "bool",
                "name": "useTotalOverflowForRedemptions",
                "type": "bool"
              },
              {
                "internalType": "bool",
                "name": "useDataSourceForPay",
                "type": "bool"
              },
              {
                "internalType": "bool",
                "name": "useDataSourceForRedeem",
                "type": "bool"
              },
              {
                "internalType": "address",
                "name": "dataSource",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "metadata",
                "type": "uint256"
              }
            ],
            "internalType": "struct JBFundingCycleMetadata",
            "name": "_metadata",
            "type": "tuple"
          },
          {
            "internalType": "uint256",
            "name": "_mustStartAtOrAfter",
            "type": "uint256"
          },
          {
            "components": [
              {
                "internalType": "uint256",
                "name": "group",
                "type": "uint256"
              },
              {
                "components": [
                  {
                    "internalType": "bool",
                    "name": "preferClaimed",
                    "type": "bool"
                  },
                  {
                    "internalType": "bool",
                    "name": "preferAddToBalance",
                    "type": "bool"
                  },
                  {
                    "internalType": "uint256",
                    "name": "percent",
                    "type": "uint256"
                  },
                  {
                    "internalType": "uint256",
                    "name": "projectId",
                    "type": "uint256"
                  },
                  {
                    "internalType": "address payable",
                    "name": "beneficiary",
                    "type": "address"
                  },
                  {
                    "internalType": "uint256",
                    "name": "lockedUntil",
                    "type": "uint256"
                  },
                  {
                    "internalType": "contract IJBSplitAllocator",
                    "name": "allocator",
                    "type": "address"
                  }
                ],
                "internalType": "struct JBSplit[]",
                "name": "splits",
                "type": "tuple[]"
              }
            ],
            "internalType": "struct JBGroupedSplits[]",
            "name": "_groupedSplits",
            "type": "tuple[]"
          },
          {
            "components": [
              {
                "internalType": "contract IJBPaymentTerminal",
                "name": "terminal",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "token",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "distributionLimit",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "distributionLimitCurrency",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "overflowAllowance",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "overflowAllowanceCurrency",
                "type": "uint256"
              }
            ],
            "internalType": "struct JBFundAccessConstraints[]",
            "name": "_fundAccessConstraints",
            "type": "tuple[]"
          },
          {
            "internalType": "string",
            "name": "_memo",
            "type": "string"
          }
        ],
        "name": "reconfigureFundingCyclesOf",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "configuration",
            "type": "uint256"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "_projectId",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "_reservedRate",
            "type": "uint256"
          }
        ],
        "name": "reservedTokenBalanceOf",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "splitsStore",
        "outputs": [
          {
            "internalType": "contract IJBSplitsStore",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "bytes4",
            "name": "_interfaceId",
            "type": "bytes4"
          }
        ],
        "name": "supportsInterface",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "tokenStore",
        "outputs": [
          {
            "internalType": "contract IJBTokenStore",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "_projectId",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "_reservedRate",
            "type": "uint256"
          }
        ],
        "name": "totalOutstandingTokensOf",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      }
    ],
    "devdoc": {
      "details": "Adheres to - IJBController: General interface for the generic controller methods in this contract that interacts with funding cycles and tokens according to the protocol's rules. IJBMigratable: Allows migrating to this contract, with a hook called to prepare for the migration.Inherits from - JBOperatable: Several functions in this contract can only be accessed by a project owner, or an address that has been preconfifigured to be an operator of the project. ERC165: Introspection on interface adherance. ",
      "kind": "dev",
      "methods": {
        "burnTokensOf(address,uint256,uint256,string,bool)": {
          "details": "Only a token's holder, a designated operator, or a project's terminal can burn it.",
          "params": {
            "_holder": "The account that is having its tokens burned.",
            "_memo": "A memo to pass along to the emitted event.",
            "_preferClaimedTokens": "A flag indicating whether a project's attached token contract should be burned first if they have been issued.",
            "_projectId": "The ID of the project to which the tokens being burned belong.",
            "_tokenCount": "The number of tokens to burn."
          }
        },
        "constructor": {
          "params": {
            "_directory": "A contract storing directories of terminals and controllers for each project.",
            "_fundingCycleStore": "A contract storing all funding cycle configurations.",
            "_operatorStore": "A contract storing operator assignments.",
            "_projects": "A contract which mints ERC-721's that represent project ownership and transfers.",
            "_splitsStore": "A contract that stores splits for each project.",
            "_tokenStore": "A contract that manages token minting and burning."
          }
        },
        "currentFundingCycleOf(uint256)": {
          "params": {
            "_projectId": "The ID of the project to which the funding cycle belongs."
          },
          "returns": {
            "fundingCycle": "The current funding cycle.",
            "metadata": "The current funding cycle's metadata."
          }
        },
        "distributeReservedTokensOf(uint256,string)": {
          "params": {
            "_memo": "A memo to pass along to the emitted event.",
            "_projectId": "The ID of the project to which the reserved tokens belong."
          },
          "returns": {
            "_0": "The amount of minted reserved tokens."
          }
        },
        "distributionLimitOf(uint256,uint256,address,address)": {
          "details": "The number of decimals in the returned fixed point amount is the same as that of the specified terminal. ",
          "params": {
            "_configuration": "The configuration during which the distribution limit applies.",
            "_projectId": "The ID of the project to get the distribution limit of.",
            "_terminal": "The terminal from which distributions are being limited.",
            "_token": "The token for which the distribution limit applies."
          },
          "returns": {
            "_0": "The distribution limit, as a fixed point number with the same number of decimals as the provided terminal.",
            "_1": "The currency of the distribution limit."
          }
        },
        "getFundingCycleOf(uint256,uint256)": {
          "params": {
            "_projectId": "The ID of the project to which the funding cycle belongs."
          },
          "returns": {
            "fundingCycle": "The funding cycle.",
            "metadata": "The funding cycle's metadata."
          }
        },
        "latestConfiguredFundingCycleOf(uint256)": {
          "params": {
            "_projectId": "The ID of the project to which the funding cycle belongs."
          },
          "returns": {
            "ballotState": "The state of the configuration.",
            "fundingCycle": "The latest configured funding cycle.",
            "metadata": "The latest configured funding cycle's metadata."
          }
        },
        "launchFundingCyclesFor(uint256,(uint256,uint256,uint256,address),((bool,bool,bool),uint256,uint256,uint256,bool,bool,bool,bool,bool,bool,bool,bool,bool,bool,bool,bool,address,uint256),uint256,(uint256,(bool,bool,uint256,uint256,address,uint256,address)[])[],(address,address,uint256,uint256,uint256,uint256)[],address[],string)": {
          "details": "Each operation within this transaction can be done in sequence separately.Only a project owner or operator can launch its funding cycles.",
          "params": {
            "_data": "Data that defines the project's first funding cycle. These properties will remain fixed for the duration of the funding cycle.",
            "_fundAccessConstraints": "An array containing amounts that a project can use from its treasury for each payment terminal. Amounts are fixed point numbers using the same number of decimals as the accompanying terminal. The `_distributionLimit` and `_overflowAllowance` parameters must fit in a `uint232`.",
            "_groupedSplits": "An array of splits to set for any number of groups. ",
            "_memo": "A memo to pass along to the emitted event.",
            "_metadata": "Metadata specifying the controller specific params that a funding cycle can have. These properties will remain fixed for the duration of the funding cycle.",
            "_mustStartAtOrAfter": "The time before which the configured funding cycle cannot start.",
            "_projectId": "The ID of the project to launch funding cycles for.",
            "_terminals": "Payment terminals to add for the project."
          },
          "returns": {
            "configuration": "The configuration of the funding cycle that was successfully created."
          }
        },
        "launchProjectFor(address,(string,uint256),(uint256,uint256,uint256,address),((bool,bool,bool),uint256,uint256,uint256,bool,bool,bool,bool,bool,bool,bool,bool,bool,bool,bool,bool,address,uint256),uint256,(uint256,(bool,bool,uint256,uint256,address,uint256,address)[])[],(address,address,uint256,uint256,uint256,uint256)[],address[],string)": {
          "details": "Each operation within this transaction can be done in sequence separately.Anyone can deploy a project on an owner's behalf.",
          "params": {
            "_data": "Data that defines the project's first funding cycle. These properties will remain fixed for the duration of the funding cycle.",
            "_fundAccessConstraints": "An array containing amounts that a project can use from its treasury for each payment terminal. Amounts are fixed point numbers using the same number of decimals as the accompanying terminal. The `_distributionLimit` and `_overflowAllowance` parameters must fit in a `uint232`.",
            "_groupedSplits": "An array of splits to set for any number of groups. ",
            "_memo": "A memo to pass along to the emitted event.",
            "_metadata": "Metadata specifying the controller specific params that a funding cycle can have. These properties will remain fixed for the duration of the funding cycle.",
            "_mustStartAtOrAfter": "The time before which the configured funding cycle cannot start.",
            "_owner": "The address to set as the owner of the project. The project ERC-721 will be owned by this address.",
            "_projectMetadata": "Metadata to associate with the project within a particular domain. This can be updated any time by the owner of the project.",
            "_terminals": "Payment terminals to add for the project."
          },
          "returns": {
            "projectId": "The ID of the project."
          }
        },
        "migrate(uint256,address)": {
          "details": "Only a project's owner or a designated operator can migrate it.",
          "params": {
            "_projectId": "The ID of the project that will be migrated from this controller.",
            "_to": "The controller to which the project is migrating."
          }
        },
        "mintTokensOf(uint256,uint256,address,string,bool,bool)": {
          "details": "Only a project's owner, a designated operator, one of its terminals, or the current data source can mint its tokens.",
          "params": {
            "_beneficiary": "The account that the tokens are being minted for.",
            "_memo": "A memo to pass along to the emitted event.",
            "_preferClaimedTokens": "A flag indicating whether a project's attached token contract should be minted if they have been issued.",
            "_projectId": "The ID of the project to which the tokens being minted belong.",
            "_tokenCount": "The amount of tokens to mint in total, counting however many should be reserved.",
            "_useReservedRate": "Whether to use the current funding cycle's reserved rate in the mint calculation."
          },
          "returns": {
            "beneficiaryTokenCount": "The amount of tokens minted for the beneficiary."
          }
        },
        "overflowAllowanceOf(uint256,uint256,address,address)": {
          "details": "The number of decimals in the returned fixed point amount is the same as that of the specified terminal. ",
          "params": {
            "_configuration": "The configuration of the during which the allowance applies.",
            "_projectId": "The ID of the project to get the overflow allowance of.",
            "_terminal": "The terminal managing the overflow.",
            "_token": "The token for which the overflow allowance applies."
          },
          "returns": {
            "_0": "The overflow allowance, as a fixed point number with the same number of decimals as the provided terminal.",
            "_1": "The currency of the overflow allowance."
          }
        },
        "prepForMigrationOf(uint256,address)": {
          "details": "This controller should not yet be the project's controller.",
          "params": {
            "_from": "The controller being migrated from.",
            "_projectId": "The ID of the project that will be migrated to this controller."
          }
        },
        "queuedFundingCycleOf(uint256)": {
          "params": {
            "_projectId": "The ID of the project to which the funding cycle belongs."
          },
          "returns": {
            "fundingCycle": "The queued funding cycle.",
            "metadata": "The queued funding cycle's metadata."
          }
        },
        "reconfigureFundingCyclesOf(uint256,(uint256,uint256,uint256,address),((bool,bool,bool),uint256,uint256,uint256,bool,bool,bool,bool,bool,bool,bool,bool,bool,bool,bool,bool,address,uint256),uint256,(uint256,(bool,bool,uint256,uint256,address,uint256,address)[])[],(address,address,uint256,uint256,uint256,uint256)[],string)": {
          "details": "Only a project's owner or a designated operator can configure its funding cycles.",
          "params": {
            "_data": "Data that defines the funding cycle. These properties will remain fixed for the duration of the funding cycle.",
            "_fundAccessConstraints": "An array containing amounts that a project can use from its treasury for each payment terminal. Amounts are fixed point numbers using the same number of decimals as the accompanying terminal. The `_distributionLimit` and `_overflowAllowance` parameters must fit in a `uint232`.",
            "_groupedSplits": "An array of splits to set for any number of groups. ",
            "_memo": "A memo to pass along to the emitted event.",
            "_metadata": "Metadata specifying the controller specific params that a funding cycle can have. These properties will remain fixed for the duration of the funding cycle.",
            "_mustStartAtOrAfter": "The time before which the configured funding cycle cannot start.",
            "_projectId": "The ID of the project whose funding cycles are being reconfigured."
          },
          "returns": {
            "configuration": "The configuration of the funding cycle that was successfully reconfigured."
          }
        },
        "reservedTokenBalanceOf(uint256,uint256)": {
          "params": {
            "_projectId": "The ID of the project to get a reserved token balance of.",
            "_reservedRate": "The reserved rate to use when making the calculation."
          },
          "returns": {
            "_0": "The current amount of reserved tokens."
          }
        },
        "supportsInterface(bytes4)": {
          "details": " See {IERC165-supportsInterface}.",
          "params": {
            "_interfaceId": "The ID of the interface to check for adherance to."
          }
        },
        "totalOutstandingTokensOf(uint256,uint256)": {
          "params": {
            "_projectId": "The ID of the project to get total outstanding tokens of.",
            "_reservedRate": "The reserved rate to use when making the calculation."
          },
          "returns": {
            "_0": "The current total amount of outstanding tokens for the project."
          }
        }
      },
      "stateVariables": {
        "_packedDistributionLimitDataOf": {
          "details": "bits 0-231: The amount of token that a project can distribute per funding cycle.bits 232-255: The currency of amount that a project can distribute. _projectId The ID of the project to get the packed distribution limit data of. _configuration The configuration during which the packed distribution limit data applies. _terminal The terminal from which distributions are being limited. _token The token for which distributions are being limited."
        },
        "_packedOverflowAllowanceDataOf": {
          "details": "bits 0-231: The amount of overflow that a project is allowed to tap into on-demand throughout the configuration.bits 232-255: The currency of the amount of overflow that a project is allowed to tap. _projectId The ID of the project to get the packed overflow allowance data of. _configuration The configuration during which the packed overflow allowance data applies. _terminal The terminal managing the overflow. _token The token for which overflow is being allowed."
        }
      },
      "version": 1
    },
    "userdoc": {
      "errors": {
        "PRBMath__MulDivOverflow(uint256,uint256)": [
          {
            "notice": "Emitted when the result overflows uint256."
          }
        ]
      },
      "kind": "user",
      "methods": {
        "burnTokensOf(address,uint256,uint256,string,bool)": {
          "notice": "Burns a token holder's supply."
        },
        "currentFundingCycleOf(uint256)": {
          "notice": "A project's current funding cycle along with its metadata."
        },
        "directory()": {
          "notice": "The directory of terminals and controllers for projects."
        },
        "distributeReservedTokensOf(uint256,string)": {
          "notice": "Distributes all outstanding reserved tokens for a project."
        },
        "distributionLimitOf(uint256,uint256,address,address)": {
          "notice": "The amount of token that a project can distribute per funding cycle, and the currency it's in terms of."
        },
        "fundingCycleStore()": {
          "notice": "The contract storing all funding cycle configurations."
        },
        "getFundingCycleOf(uint256,uint256)": {
          "notice": "A project's funding cycle for the specified configuration along with its metadata."
        },
        "latestConfiguredFundingCycleOf(uint256)": {
          "notice": "A project's latest configured funding cycle along with its metadata and the ballot state of the configuration."
        },
        "launchFundingCyclesFor(uint256,(uint256,uint256,uint256,address),((bool,bool,bool),uint256,uint256,uint256,bool,bool,bool,bool,bool,bool,bool,bool,bool,bool,bool,bool,address,uint256),uint256,(uint256,(bool,bool,uint256,uint256,address,uint256,address)[])[],(address,address,uint256,uint256,uint256,uint256)[],address[],string)": {
          "notice": "Creates a funding cycle for an already existing project ERC-721."
        },
        "launchProjectFor(address,(string,uint256),(uint256,uint256,uint256,address),((bool,bool,bool),uint256,uint256,uint256,bool,bool,bool,bool,bool,bool,bool,bool,bool,bool,bool,bool,address,uint256),uint256,(uint256,(bool,bool,uint256,uint256,address,uint256,address)[])[],(address,address,uint256,uint256,uint256,uint256)[],address[],string)": {
          "notice": "Creates a project. This will mint an ERC-721 into the specified owner's account, configure a first funding cycle, and set up any splits."
        },
        "migrate(uint256,address)": {
          "notice": "Allows a project to migrate from this controller to another."
        },
        "mintTokensOf(uint256,uint256,address,string,bool,bool)": {
          "notice": "Mint new token supply into an account, and optionally reserve a supply to be distributed according to the project's current funding cycle configuration."
        },
        "operatorStore()": {
          "notice": " A contract storing operator assignments."
        },
        "overflowAllowanceOf(uint256,uint256,address,address)": {
          "notice": "The amount of overflow that a project is allowed to tap into on-demand throughout a configuration, and the currency it's in terms of."
        },
        "prepForMigrationOf(uint256,address)": {
          "notice": "Allows other controllers to signal to this one that a migration is expected for the specified project."
        },
        "projects()": {
          "notice": "Mints ERC-721's that represent project ownership."
        },
        "queuedFundingCycleOf(uint256)": {
          "notice": "A project's queued funding cycle along with its metadata."
        },
        "reconfigureFundingCyclesOf(uint256,(uint256,uint256,uint256,address),((bool,bool,bool),uint256,uint256,uint256,bool,bool,bool,bool,bool,bool,bool,bool,bool,bool,bool,bool,address,uint256),uint256,(uint256,(bool,bool,uint256,uint256,address,uint256,address)[])[],(address,address,uint256,uint256,uint256,uint256)[],string)": {
          "notice": "Proposes a configuration of a subsequent funding cycle that will take effect once the current one expires if it is approved by the current funding cycle's ballot."
        },
        "reservedTokenBalanceOf(uint256,uint256)": {
          "notice": "Gets the amount of reserved tokens that a project has available to distribute."
        },
        "splitsStore()": {
          "notice": "The contract that stores splits for each project."
        },
        "supportsInterface(bytes4)": {
          "notice": "Indicates if this contract adheres to the specified interface."
        },
        "tokenStore()": {
          "notice": "The contract that manages token minting and burning."
        },
        "totalOutstandingTokensOf(uint256,uint256)": {
          "notice": "Gets the current total amount of outstanding tokens for a project, given a reserved rate."
        }
      },
      "notice": "Stitches together funding cycles and project tokens, making sure all activity is accounted for and correct.",
      "version": 1
    }
  },
  "settings": {
    "compilationTarget": {
      "node_modules/@jbx-protocol/juice-contracts-v3/contracts/JBController.sol": "JBController"
    },
    "evmVersion": "london",
    "libraries": {},
    "metadata": {
      "bytecodeHash": "ipfs"
    },
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "remappings": [
      ":@jbx-protocol/=node_modules/@jbx-protocol/",
      ":@openzeppelin/=node_modules/@openzeppelin/",
      ":@paulrberg/=node_modules/@paulrberg/",
      ":ds-test/=lib/forge-std/lib/ds-test/src/",
      ":forge-std/=lib/forge-std/src/",
      ":prb-math/=node_modules/prb-math/"
    ]
  },
  "sources": {
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/JBController.sol": {
      "keccak256": "0x77836f67d661c1c975b846eaf4029d9a73c51e20a743153a6f5528729847f6c5",
      "license": "MIT",
      "urls": [
        "bzz-raw://d3cd32f81b054422c26c0514c6b2e370dfadb6e2a0e7427f27451cf4f3029d26",
        "dweb:/ipfs/QmR2X4XjXWfQcCFFqvswxSn3ftKwKYrzYdq233dSA3ACUk"
      ]
    },
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/abstract/JBOperatable.sol": {
      "keccak256": "0x9e62cac5c464eb973f881cf6c373b95aab31d2ddbeb048ee7ad82b5c9ab28add",
      "license": "MIT",
      "urls": [
        "bzz-raw://3b76b81bf5076219f1babbebcf993ecb1fc04ee547e3c82a8c74bfa761c8a735",
        "dweb:/ipfs/QmbpQintWGTJvQyqoe4fdWFF22mBxb2hSomwbbuJ73CQpi"
      ]
    },
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/enums/JBBallotState.sol": {
      "keccak256": "0x891fcac63470398b3a11239da7feba6b07d640809fcefd2404303b823d7378f8",
      "license": "MIT",
      "urls": [
        "bzz-raw://6e6adfceaf284b669a8c1cbcf2da7f18ab31a2d1066f9db8bc914349e7401de7",
        "dweb:/ipfs/QmXLHVRPPZdXUkgAHQbHUtEzAvCJk1P6rJ7wrwfTcfW6fw"
      ]
    },
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/interfaces/IJBController.sol": {
      "keccak256": "0xb1ee4b41f2a06f28f69c74cb729b8964f2e75f3c545a68f85bd9082b5575bc85",
      "license": "MIT",
      "urls": [
        "bzz-raw://160aef4e645dde9524564b2bd302e7c766bdf1f67c4fa58516ed59d1dbb7c2a6",
        "dweb:/ipfs/QmaTpyWKi4itYaaxTKU6JUarJHRmxCMP65cp2NJ6ejJDZW"
      ]
    },
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/interfaces/IJBDirectory.sol": {
      "keccak256": "0x715321646db00514d1355ed43c40cd3f01e94959552fd07797b315d9c49cdb1d",
      "license": "MIT",
      "urls": [
        "bzz-raw://c34c9e1c727ffc63dd42fb6e6ffb3116c8ba15d6a322a300f10f29478974768d",
        "dweb:/ipfs/QmYToaGrbMyyWAuyepYcDd8M6KcmosY8AWhT3uJmPM6Pvy"
      ]
    },
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/interfaces/IJBFundingCycleBallot.sol": {
      "keccak256": "0x49553a56209237846bc400cf27f260824a6bd06fd8094a7eb5abb9de75779598",
      "license": "MIT",
      "urls": [
        "bzz-raw://559372746f94f28b385bc336df263f583dca5377350645c0b28110b083bdb41a",
        "dweb:/ipfs/QmeQRYqPjXBQCtMKXSFtHVD2ewEPoUAPDxLh4oWTRSKbmx"
      ]
    },
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/interfaces/IJBFundingCycleStore.sol": {
      "keccak256": "0xaead823851433be0c2ddc8f8086813e6cd647de3a1bc0f7570a5d6b38c378b5a",
      "license": "MIT",
      "urls": [
        "bzz-raw://7f11fd52ba9ef67b40811d8a2298ae8b69447d2565b3f1069cbb8f0f13bc65e7",
        "dweb:/ipfs/QmVbBzpTxZWar9xvj6x1vW91hJDv2iPVq7aG6waMxaHUPQ"
      ]
    },
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/interfaces/IJBMigratable.sol": {
      "keccak256": "0xc81053e4b4754fc510aa04fecd3ab1460f01e3e27761e7a8c94f631a978ae127",
      "license": "MIT",
      "urls": [
        "bzz-raw://4c57ab7d0c0e6d9be798055d68b6f253421458b3beb38d0a3596da104000ca9e",
        "dweb:/ipfs/QmXn1CaffHoP2s43vkUszihdNk1TdfAxejngfdk2VmBVFU"
      ]
    },
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/interfaces/IJBOperatable.sol": {
      "keccak256": "0x09a55a91c6ce3625379334271d236cfa47bf36522a91568b406bf06f7239407e",
      "license": "MIT",
      "urls": [
        "bzz-raw://c4e0058ff862925a9070f88bec5c53e8aaa5d3ac75952285b1e7ca67ecbe1d3b",
        "dweb:/ipfs/QmVowtkRjGePcpaGjivvFyWTjQBGCtJQqoXFtxX6qhkx56"
      ]
    },
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/interfaces/IJBOperatorStore.sol": {
      "keccak256": "0x17f4929812a356984795fafed8cb2be816a025c9a0771d85595ac0b5ff3cffc5",
      "license": "MIT",
      "urls": [
        "bzz-raw://4379909df832d51d25ac6f863c12e5271c96f01c4fd399eaeb16be3db8786e4c",
        "dweb:/ipfs/QmTeGMNaf3KPT2A54sQ6HoZiBwfGRNqMZtvvci4oAN4z2s"
      ]
    },
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/interfaces/IJBPaymentTerminal.sol": {
      "keccak256": "0xb7826f5ed609359ce322c09e83236c47ba385df1c3cad3607e56fd0a2e00eee2",
      "license": "MIT",
      "urls": [
        "bzz-raw://cbb0de0e73f73a04fcfc8f08cab3588b6d608cf5268af737cff6a530f6062c95",
        "dweb:/ipfs/QmPGb8aEbZNHNnrCvuGH52RLvV3kjL3agxQiFrjHoLHaup"
      ]
    },
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/interfaces/IJBProjects.sol": {
      "keccak256": "0x7cfc021d0bd7e73b1ba8f4845d7d35e3419d6a14d3d25ca3a8010e7f91062fe4",
      "license": "MIT",
      "urls": [
        "bzz-raw://ff265e13e60da56b93104260ed69ab01153437ec2af9d453781f22ca295eaef9",
        "dweb:/ipfs/QmfGCSLX2Wy26ojf4U12udsdtjSSacbLcZGwCjTw7MjWF8"
      ]
    },
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/interfaces/IJBSplitAllocator.sol": {
      "keccak256": "0x5efb6f51fc161f42ff58989386ad99028e4039a0ba897d66f358c3dfcf686105",
      "license": "MIT",
      "urls": [
        "bzz-raw://171df7cf5285170894d7d7d00ecb14271204b55d330fa65e1bf9ebfb21741c29",
        "dweb:/ipfs/QmXBmzjVVgGd1hZoStw2qoypJnqyWgYeMXMLyYS7f6Zonu"
      ]
    },
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/interfaces/IJBSplitsStore.sol": {
      "keccak256": "0x66dab3dd394e318b850401ca92c2963b906cc0ad5562fa5d4f6f850175d1c77a",
      "license": "MIT",
      "urls": [
        "bzz-raw://948dae4e7eddc75f32fe75b25f97a7bad0e7b335a8a5a8dfd81b532dd325dd27",
        "dweb:/ipfs/QmZY1s7r85NWVdqhmUE71Pkuo7CPk8SMgAwUrj8bLpTaWC"
      ]
    },
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/interfaces/IJBToken.sol": {
      "keccak256": "0xe8969210417736c85d71101bf1c0bd8ebbf9d1e62a93e758148bd5709a6c7097",
      "license": "MIT",
      "urls": [
        "bzz-raw://214c67c2ebeabd1b412ac9b0b6de4c02765c8311a3dc258568a2aa7322d58fb7",
        "dweb:/ipfs/QmeEbk8YWRVtMpxWQGfYbMrgYc2qsPhQF5jpufK26RrCXY"
      ]
    },
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/interfaces/IJBTokenStore.sol": {
      "keccak256": "0x98459e3af050d41dfeffdc97f1c93330207ba450f8ff3613224b49a89eeca9c6",
      "license": "MIT",
      "urls": [
        "bzz-raw://0e98bda797088b1bb2a756eaed911ab12b092ffdad5467e82650bfa9bf8dd046",
        "dweb:/ipfs/QmbuKq4xSC8LL62smwrHWCWKiWawEu8Ne2n7q8DhKHKvtD"
      ]
    },
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/interfaces/IJBTokenUriResolver.sol": {
      "keccak256": "0xd267fd8ca7c21c2c71794acdb9a98314c33a35fc559e0bf0897a6686d196d174",
      "license": "MIT",
      "urls": [
        "bzz-raw://aa7053d4300ed1374f3f993e6e2163d0a05ee780e4e99eb007b55eabc93c724e",
        "dweb:/ipfs/QmYZAUn7VCwqpDWYZNCXLNYMRQpD334YgPRiGCfxQApzuT"
      ]
    },
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/libraries/JBConstants.sol": {
      "keccak256": "0x34362846a1cd428a8bdedf4ab6857e11402f345cb87b994b2e7fb6d2474b808d",
      "license": "MIT",
      "urls": [
        "bzz-raw://80b423d29251e6d6cc6bd24b89474628ebcd588fbf485da714134e449e002264",
        "dweb:/ipfs/QmVBKR4eLMfJRHJLxEJJJQiYEgkoXK6kK6HyFy7mQ9Wx6d"
      ]
    },
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/libraries/JBFundingCycleMetadataResolver.sol": {
      "keccak256": "0x3d045c38593102cfb6ac67f3ddf2232e1ff5518d6d021423ae2681387599fbd3",
      "license": "MIT",
      "urls": [
        "bzz-raw://a3ed08bbad9868881b87258ecb34b6b5a4fe83e321e5f59c66a758180077135e",
        "dweb:/ipfs/QmbVDpmk4VvunFqpkmsEqX8VomEbsXpRebv841dHRBpy63"
      ]
    },
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/libraries/JBGlobalFundingCycleMetadataResolver.sol": {
      "keccak256": "0x0d998f938026edeb755987a79421267cf860801161b5f171206a200b60f1061f",
      "license": "MIT",
      "urls": [
        "bzz-raw://d2ff895bbf2f18fe6538abe53966acd8ea128795283209bb8402ac72ddd529b1",
        "dweb:/ipfs/QmZgU8rokY5sBQ2guFmPotGh4e8ReNHAyZzRhZXrN9a8EP"
      ]
    },
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/libraries/JBOperations.sol": {
      "keccak256": "0x7f8e501e6890297f4015b1c27cebdb44fadbf21204bea1f3162f5388c060f690",
      "license": "MIT",
      "urls": [
        "bzz-raw://6827d04b543d9579e910703ffe4b97293cad258faab20c52dfb17b905a4b5e9a",
        "dweb:/ipfs/QmUW4NQdubMEd71uAdo7VkDXgTdvmiV9CAMSjk9ozQBfz9"
      ]
    },
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/libraries/JBSplitsGroups.sol": {
      "keccak256": "0x4183db6087bd8db645fc3a0d3d8afb0d6356e003650793f63c301ebbbae47269",
      "license": "MIT",
      "urls": [
        "bzz-raw://0114af7edb6cdc38cd472fea4e88bb4766c78290ddf97323ee40a4554d541124",
        "dweb:/ipfs/QmYmYmhSDRYKvxQoEBpaSabEiVrz9CV7A9dTCrXP3ZVNov"
      ]
    },
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/structs/JBFundAccessConstraints.sol": {
      "keccak256": "0x85ebaa57b788cbdedc7a3d0eec4892eda5d79db7c1a6103797f10d0d989775b2",
      "license": "MIT",
      "urls": [
        "bzz-raw://1a911a9d1d0a6f0e475854838877d2d3ae606028381c2aef7fac192a33e3d329",
        "dweb:/ipfs/QmTih57fwyaXdjvXCrG9BbdayD6H2AHQrYkuL4v4rYhMyF"
      ]
    },
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/structs/JBFundingCycle.sol": {
      "keccak256": "0xcdd3ac9b6fa67e62ada88d09b73bc35ade1cd77d43db712289266a788928b4c2",
      "license": "MIT",
      "urls": [
        "bzz-raw://8ba0be407022bbeb0e9272884653209ee262b8a4e00ffbba1298c3b119feccba",
        "dweb:/ipfs/QmbtLQzSN3hut4jYVsYPiYDfRkDdGkZmTWBnV2wJKrdM3K"
      ]
    },
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/structs/JBFundingCycleData.sol": {
      "keccak256": "0x2aa6368bf4dfc5797e8b02a978293de0c777fae2658de2c825a103587240f3b0",
      "license": "MIT",
      "urls": [
        "bzz-raw://2d7a980ab9b67ad1569d4407b747903cab668a332214117f5ad44feb50af0a3a",
        "dweb:/ipfs/QmSuEzmrmDSihrTKYCk8miq7VQi7WD6jmQePkjDyzt7UpC"
      ]
    },
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/structs/JBFundingCycleMetadata.sol": {
      "keccak256": "0x783604440cac8d176332eab28166f188ee5c230378c08cfc95fea4f7187dc77d",
      "license": "MIT",
      "urls": [
        "bzz-raw://81409f9675aabd5ece88efbf08d1acb5581c2aac5b6394824f575f5f2edb5788",
        "dweb:/ipfs/QmPWdUztAEssCEnuFFkj74kNFEfVUxbNFmD5GmVB2Qvj1h"
      ]
    },
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/structs/JBGlobalFundingCycleMetadata.sol": {
      "keccak256": "0x05d85530305fec6d6eca54cdbc2cd9110cbda0146598032b0203aa4b622944ff",
      "license": "MIT",
      "urls": [
        "bzz-raw://ec56eff6784c7b60ebc3098037573d8ece138794a9a58ebe8412e75927e984cd",
        "dweb:/ipfs/QmdkEeE6JDyCiV3YBKf7h3FymEHCAHHAtBokUkJwFWVPSf"
      ]
    },
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/structs/JBGroupedSplits.sol": {
      "keccak256": "0x80be1b220da4ac04851ea540ebb94c1ec2b0442ec5bd1e88fdf78a56becd8b5a",
      "license": "MIT",
      "urls": [
        "bzz-raw://b73e5da7d38bfadd565c202aa1a5a6c08a51542699e8e3683b8888009bc62563",
        "dweb:/ipfs/QmUNTy4XVvfAMqP7wCjj84deTvCehkBL1diZoWkyMCVsPw"
      ]
    },
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/structs/JBOperatorData.sol": {
      "keccak256": "0x3b85be7b69515976ee10770776283911666aceca820b0cf4e201ea4dbffeb6f0",
      "license": "MIT",
      "urls": [
        "bzz-raw://1a18afb385759e5440c645f2a5c581e42a7ac357c73c376fb34dbb5d5fd8f9af",
        "dweb:/ipfs/QmZziN5ixwUXpk185YrcneBEVq91gVqYoBD7MrbvTTpALP"
      ]
    },
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/structs/JBProjectMetadata.sol": {
      "keccak256": "0x90ad7b1014c0a9f945fe7a2efde9d5de41e40574fa27969070b1d2ff52033ea0",
      "license": "MIT",
      "urls": [
        "bzz-raw://1fafc65a9fd74605b7d6c6f0a92b3237a8e3efdd160affb8c117bad00dcf9494",
        "dweb:/ipfs/QmQkcVt11WLqrxHVrcDCF6dNxzg2kKHEghAgSbfLF6CHkt"
      ]
    },
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/structs/JBSplit.sol": {
      "keccak256": "0xc80a16606da8abf76d0f73abc38aee041e24f29342c1939018f70c286e89f105",
      "license": "MIT",
      "urls": [
        "bzz-raw://d257df1f322904fdbf34a0d28880cc96a1ba3905d19488d83156a7d3476d820f",
        "dweb:/ipfs/QmP6WFuoK6ePEQ2zxRnpu1kWDdFSUTGaEV57eZ4gs9FqC8"
      ]
    },
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/structs/JBSplitAllocationData.sol": {
      "keccak256": "0x39f5c41bd31d36774744698ac94484b6cab62d7038df2f29d947668959782e63",
      "license": "MIT",
      "urls": [
        "bzz-raw://cf81d025aa0f6f93bdcd0b863730f7c574de7c3c4a595ba88e342f46c4b724e4",
        "dweb:/ipfs/QmaQ1frbYciPVV1Qmsfmgts9fgbXKZLQ8jGf9XRikHSmci"
      ]
    },
    "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
      "keccak256": "0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f",
      "license": "MIT",
      "urls": [
        "bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f",
        "dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x"
      ]
    },
    "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
      "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
      "license": "MIT",
      "urls": [
        "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
        "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
      ]
    },
    "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
      "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
      "license": "MIT",
      "urls": [
        "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
        "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
      ]
    },
    "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol": {
      "keccak256": "0x02686c31ccb9ee77a299fa5f47327af5271f251a707a0e24f321957166ff0434",
      "license": "MIT",
      "urls": [
        "bzz-raw://cb562d8ae1da31249ca0d8553df9f89ef4c3c110a018c4449dde68ae30e51ec1",
        "dweb:/ipfs/QmUwxjtTUYB89ymeV46TZPmTsGnYrKNcgTHk7MQA1MG3hj"
      ]
    },
    "node_modules/@paulrberg/contracts/math/PRBMath.sol": {
      "keccak256": "0x42821345981bc0434a90ba2268a2f5278dfe9e38166981d72fc7f3b776a29495",
      "license": "Unlicense",
      "urls": [
        "bzz-raw://92f28eea1e22d4e7998617483eef42d89eb97b364414cf41041c86aa633d3b47",
        "dweb:/ipfs/QmT5entVZFjbb3ZGZZvNAGqtwerCgwjCfN1Qmvf8jKPBXj"
      ]
    },
    "node_modules/prb-math/contracts/PRBMath.sol": {
      "keccak256": "0xed164c95012964f5e125b5d2b2d00471a4bdee4def618cd1fcf341d196011b61",
      "license": "Unlicense",
      "urls": [
        "bzz-raw://3ba3ad78675323279adfc09038eaa14f4cde3f3173e5d2d60b9c30bf7099aa7b",
        "dweb:/ipfs/QmV56KGJZQG681hwd7JQDv3KjAa9JSGF88ShGx8YBCuvcR"
      ]
    }
  },
  "version": 1
}